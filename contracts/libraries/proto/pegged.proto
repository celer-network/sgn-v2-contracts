syntax = "proto3";
option go_package = "github.com/celer-network/sgn-v2/proto/eth";

import "google/protobuf/descriptor.proto";

package pegged;

extend google.protobuf.FieldOptions {
  string soltype = 1004;
}

// mint pegged token
// triggered by deposit at the original token vault
message Mint {
  bytes token = 1 [(soltype) = "address"];
  bytes account = 2 [(soltype) = "address"];
  bytes amount = 3 [(soltype) = "uint256"];
  // depositor defines the account address that made deposit at the original token chain,
  // or the account address that burned tokens at another remote chain
  // Not applicable to governance-triggered mints.
  bytes depositor = 4 [(soltype) = "address"];
  // ref_chain_id defines the reference chain ID, taking values of:
  // 1. The common case: the chain ID on which the corresponding deposit or burn happened;
  // 2. Governance-triggered mint: the chain ID on which the minting will happen.
  uint64 ref_chain_id = 5;
  // ref_id defines a unique reference ID, taking values of:
  // 1. The common case of deposit/burn-mint: the deposit or burn ID;
  // 2. Governance-triggered mint: ID as needed.
  bytes ref_id = 6 [(soltype) = "bytes32"];
}

// withdraw locked original tokens
// triggered by burn at the pegged token bridge
message Withdraw {
  bytes token = 1 [(soltype) = "address"];
  bytes receiver = 2 [(soltype) = "address"];
  bytes amount = 3 [(soltype) = "uint256"];
  // burn_account defines the account that burned the pegged token.
  // Not applicable to fee claims and governance-triggered withdrawals.
  bytes burn_account = 4 [(soltype) = "address"];
  // ref_chain_id defines the reference chain ID, taking values of:
  // 1. The common case of burn-withdraw: the chain ID on which the corresponding burn happened;
  // 2. Pegbridge fee claim: zero / Not applicable;
  // 3. Other governance-triggered withdrawals: the chain ID on which the withdrawal will happen.
  uint64 ref_chain_id = 5;
  // ref_id defines a unique reference ID, taking values of:
  // 1. The common case of burn-withdraw: the burn ID;
  // 2. Pegbridge fee claim: a per-account nonce;
  // 3. Refund for wrong deposit: the deposit ID;
  // 4. Governance-triggered withdrawal: ID as needed.
  bytes ref_id = 6 [(soltype) = "bytes32"];
}
