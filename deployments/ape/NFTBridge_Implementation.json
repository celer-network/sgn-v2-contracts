{
  "address": "0x265B25e22bcd7f10a5bD6E6410F10537Cc7567e8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_msgBus",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "returnData",
          "type": "bytes"
        }
      ],
      "name": "ExtCallErr",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FeeClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "messageBus",
          "type": "address"
        }
      ],
      "name": "MessageBusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "srcChid",
          "type": "uint64"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstNft",
          "type": "address"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstNftBridge",
          "type": "address"
        }
      ],
      "name": "SetDestBridge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstNft",
          "type": "address"
        }
      ],
      "name": "SetDestNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isOrig",
          "type": "bool"
        }
      ],
      "name": "SetOrigNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "chid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "SetTxFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "name": "delOrigNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "destBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "destNFTAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "destTxFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "srcChid",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "executeMessage",
      "outputs": [
        {
          "internalType": "enum IMessageReceiverApp.ExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_srcChainId",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "name": "executeMessageWithTransfer",
      "outputs": [
        {
          "internalType": "enum IMessageReceiverApp.ExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_srcChainId",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "name": "executeMessageWithTransferFallback",
      "outputs": [
        {
          "internalType": "enum IMessageReceiverApp.ExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "name": "executeMessageWithTransferRefund",
      "outputs": [
        {
          "internalType": "enum IMessageReceiverApp.ExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_msgBus",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageBus",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "origNFT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "sendMsg",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "sendTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "dstNftBridge",
          "type": "address"
        }
      ],
      "name": "setDestBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64[]",
          "name": "dstChid",
          "type": "uint64[]"
        },
        {
          "internalType": "address[]",
          "name": "dstNftBridge",
          "type": "address[]"
        }
      ],
      "name": "setDestBridges",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "dstNft",
          "type": "address"
        }
      ],
      "name": "setDestNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "internalType": "uint64[]",
          "name": "dstChid",
          "type": "uint64[]"
        },
        {
          "internalType": "address[]",
          "name": "dstNft",
          "type": "address[]"
        }
      ],
      "name": "setDestNFTs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageBus",
          "type": "address"
        }
      ],
      "name": "setMessageBus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "name": "setOrigNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "chid",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setTxFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "totalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x37e79de855829077b471a3dd8af8ffbd945c09cef930f5c56d79cbd9ea4f1ff6",
  "receipt": {
    "to": null,
    "from": "0x58b529F9084D7eAA598EB3477Fe36064C5B7bbC1",
    "contractAddress": "0x265B25e22bcd7f10a5bD6E6410F10537Cc7567e8",
    "transactionIndex": 0,
    "gasUsed": "2456052",
    "logsBloom": "0x
    "blockHash": "0xa9f09e939658d856ea0ed618c4882be9ba9c62e659b008bf97145c1a25ea17ab",
    "transactionHash": "0x37e79de855829077b471a3dd8af8ffbd945c09cef930f5c56d79cbd9ea4f1ff6",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 239042,
        "transactionHash": "0x37e79de855829077b471a3dd8af8ffbd945c09cef930f5c56d79cbd9ea4f1ff6",
        "address": "0x265B25e22bcd7f10a5bD6E6410F10537Cc7567e8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000058b529f9084d7eaa598eb3477fe36064c5b7bbc1"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xa9f09e939658d856ea0ed618c4882be9ba9c62e659b008bf97145c1a25ea17ab"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 239042,
        "transactionHash": "0x37e79de855829077b471a3dd8af8ffbd945c09cef930f5c56d79cbd9ea4f1ff6",
        "address": "0x265B25e22bcd7f10a5bD6E6410F10537Cc7567e8",
        "topics": [
          "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8"
        ],
        "data": "0x00000000000000000000000058b529f9084d7eaa598eb3477fe36064c5b7bbc1",
        "logIndex": 1,
        "blockHash": "0xa9f09e939658d856ea0ed618c4882be9ba9c62e659b008bf97145c1a25ea17ab"
      }
    ],
    "blockNumber": 239042,
    "cumulativeGasUsed": "2456052",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5471ea8f739dd37E9B81Be9c5c77754D8AA953E4"
  ],
  "numDeployments": 1,
  "solcInputHash": "aee9ff6f2b14d4db850e8f416cee1eb4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_msgBus\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"ExtCallErr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"messageBus\",\"type\":\"address\"}],\"name\":\"MessageBusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"srcChid\",\"type\":\"uint64\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstNft\",\"type\":\"address\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstNftBridge\",\"type\":\"address\"}],\"name\":\"SetDestBridge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstNft\",\"type\":\"address\"}],\"name\":\"SetDestNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isOrig\",\"type\":\"bool\"}],\"name\":\"SetOrigNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"chid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetTxFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"delOrigNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"destBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"destNFTAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"destTxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"srcChid\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executeMessage\",\"outputs\":[{\"internalType\":\"enum IMessageReceiverApp.ExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"executeMessageWithTransfer\",\"outputs\":[{\"internalType\":\"enum IMessageReceiverApp.ExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"executeMessageWithTransferFallback\",\"outputs\":[{\"internalType\":\"enum IMessageReceiverApp.ExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"executeMessageWithTransferRefund\",\"outputs\":[{\"internalType\":\"enum IMessageReceiverApp.ExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_msgBus\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageBus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"origNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"dstNftBridge\",\"type\":\"address\"}],\"name\":\"setDestBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"dstChid\",\"type\":\"uint64[]\"},{\"internalType\":\"address[]\",\"name\":\"dstNftBridge\",\"type\":\"address[]\"}],\"name\":\"setDestBridges\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"dstNft\",\"type\":\"address\"}],\"name\":\"setDestNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"internalType\":\"uint64[]\",\"name\":\"dstChid\",\"type\":\"uint64[]\"},{\"internalType\":\"address[]\",\"name\":\"dstNft\",\"type\":\"address[]\"}],\"name\":\"setDestNFTs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageBus\",\"type\":\"address\"}],\"name\":\"setMessageBus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"setOrigNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chid\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setTxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeMessageWithTransfer(address,address,uint256,uint64,bytes,address)\":{\"params\":{\"_amount\":\"The amount of tokens received at this contract through the cross-chain bridge.        the contract that implements this contract can safely assume that the tokens will arrive before this        function is called.\",\"_executor\":\"Address who called the MessageBus execution function\",\"_message\":\"Arbitrary message bytes originated from and encoded by the source app contract\",\"_sender\":\"The address of the source app contract\",\"_srcChainId\":\"The source chain ID where the transfer is originated from\",\"_token\":\"The address of the token that comes out of the bridge\"}},\"executeMessageWithTransferFallback(address,address,uint256,uint64,bytes,address)\":{\"params\":{\"_amount\":\"The amount of tokens received at this contract through the cross-chain bridge.        the contract that implements this contract can safely assume that the tokens will arrive before this        function is called.\",\"_executor\":\"Address who called the MessageBus execution function\",\"_message\":\"Arbitrary message bytes originated from and encoded by the source app contract\",\"_sender\":\"The address of the source app contract\",\"_srcChainId\":\"The source chain ID where the transfer is originated from\",\"_token\":\"The address of the token that comes out of the bridge\"}},\"executeMessageWithTransferRefund(address,uint256,bytes,address)\":{\"params\":{\"_amount\":\"The amount of the original transfer\",\"_executor\":\"Address who called the MessageBus execution function\",\"_message\":\"The same message associated with the original transfer\",\"_token\":\"The token address of the original transfer\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"sendTo(address,uint256,uint64,address)\":{\"params\":{\"_dstChid\":\"dest chain ID\",\"_id\":\"nft token ID to bridge\",\"_nft\":\"address of source NFT contract\",\"_receiver\":\"receiver address on dest chain\"}},\"totalFee(uint64,address,uint256)\":{\"details\":\"we use _nft address for user as it's same length so same msg cost\",\"params\":{\"_dstChid\":\"dest chain ID\",\"_id\":\"token ID to bridge (need to get accurate tokenURI length)\",\"_nft\":\"address of source NFT contract\"},\"returns\":{\"_0\":\"total fee needed for user tx\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"NFT Bridge \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"destBridge(uint64)\":{\"notice\":\"per dest chain id NFTBridge address\"},\"destNFTAddr(address,uint64)\":{\"notice\":\"first key is NFT address on this chain, 2nd key is dest chain id, value is address on dest chain\"},\"destTxFee(uint64)\":{\"notice\":\"per dest chain id executor fee in this chain's gas token\"},\"executeMessageWithTransfer(address,address,uint256,uint64,bytes,address)\":{\"notice\":\"Called by MessageBus (MessageBusReceiver) if the process is originated from MessageBus (MessageBusSender)'s         sendMessageWithTransfer it is only called when the tokens are checked to be arrived at this contract's address.\"},\"executeMessageWithTransferFallback(address,address,uint256,uint64,bytes,address)\":{\"notice\":\"Only called by MessageBus (MessageBusReceiver) if         1. executeMessageWithTransfer reverts, or         2. executeMessageWithTransfer returns ExecutionStatus.Fail\"},\"executeMessageWithTransferRefund(address,uint256,bytes,address)\":{\"notice\":\"Called by MessageBus (MessageBusReceiver) to process refund of the original transfer from this contract\"},\"origNFT(address)\":{\"notice\":\"only set to true if NFT addr on this chain is the orig, so we will use deposit/withdraw instead of burn/mint. not applicable for mcn nft (always burn/mint)\"},\"sendTo(address,uint256,uint64,address)\":{\"notice\":\"locks or burn user's NFT in this contract and send message to mint (or withdraw) on dest chain\"},\"totalFee(uint64,address,uint256)\":{\"notice\":\"totalFee returns gas token value to be set in user tx, includes both cbridge msg fee and executor fee on dest chain\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/message/apps/NFTBridge.sol\":\"NFTBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/message/apps/NFTBridge.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity 0.8.9;\\n\\nimport \\\"../framework/MessageReceiverApp.sol\\\";\\nimport \\\"../interfaces/IMessageBus.sol\\\";\\nimport \\\"../../safeguard/Pauser.sol\\\";\\n\\n// interface for NFT contract, ERC721 and metadata, only funcs needed by NFTBridge\\ninterface INFT {\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    // we do not support NFT that charges transfer fees\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    // impl by NFToken contract, mint an NFT with id and uri to user or burn\\n    function bridgeMint(\\n        address to,\\n        uint256 id,\\n        string memory uri\\n    ) external;\\n\\n    function burn(uint256 id) external;\\n}\\n\\n/** @title NFT Bridge */\\ncontract NFTBridge is MessageReceiverApp, Pauser {\\n    /// per dest chain id executor fee in this chain's gas token\\n    mapping(uint64 => uint256) public destTxFee;\\n    /// per dest chain id NFTBridge address\\n    mapping(uint64 => address) public destBridge;\\n    /// first key is NFT address on this chain, 2nd key is dest chain id, value is address on dest chain\\n    mapping(address => mapping(uint64 => address)) public destNFTAddr;\\n\\n    /// only set to true if NFT addr on this chain is the orig, so we will use deposit/withdraw instead of burn/mint.\\n    /// not applicable for mcn nft (always burn/mint)\\n    mapping(address => bool) public origNFT;\\n\\n    struct NFTMsg {\\n        address user; // receiver of minted or withdrawn NFT\\n        address nft; // NFT contract on mint/withdraw chain\\n        uint256 id; // token ID\\n        string uri; // tokenURI from source NFT\\n    }\\n    // emit in deposit or burn\\n    event Sent(address sender, address srcNft, uint256 id, uint64 dstChid, address receiver, address dstNft);\\n    // emit for mint or withdraw message\\n    event Received(address receiver, address nft, uint256 id, uint64 srcChid);\\n\\n    // emit when params change\\n    event SetDestNFT(address srcNft, uint64 dstChid, address dstNft);\\n    event SetTxFee(uint64 chid, uint256 fee);\\n    event SetDestBridge(uint64 dstChid, address dstNftBridge);\\n    event FeeClaimed(uint256 amount);\\n    event SetOrigNFT(address nft, bool isOrig);\\n    // emit if executeMessage calls nft transfer or bridgeMint returns error\\n    event ExtCallErr(bytes returnData);\\n\\n    constructor(address _msgBus) {\\n        messageBus = _msgBus;\\n    }\\n\\n    // only to be called by Proxy via delegatecall and will modify Proxy state\\n    // initOwner will fail if owner is already set, so only delegateCall will work\\n    function init(address _msgBus) external {\\n        initOwner();\\n        messageBus = _msgBus;\\n    }\\n\\n    /**\\n     * @notice totalFee returns gas token value to be set in user tx, includes both cbridge msg fee and executor fee on dest chain\\n     * @dev we use _nft address for user as it's same length so same msg cost\\n     * @param _dstChid dest chain ID\\n     * @param _nft address of source NFT contract\\n     * @param _id token ID to bridge (need to get accurate tokenURI length)\\n     * @return total fee needed for user tx\\n     */\\n    function totalFee(\\n        uint64 _dstChid,\\n        address _nft,\\n        uint256 _id\\n    ) external view returns (uint256) {\\n        string memory _uri = INFT(_nft).tokenURI(_id);\\n        bytes memory message = abi.encode(NFTMsg(_nft, _nft, _id, _uri));\\n        return IMessageBus(messageBus).calcFee(message) + destTxFee[_dstChid];\\n    }\\n\\n    // ===== called by user\\n    /**\\n     * @notice locks or burn user's NFT in this contract and send message to mint (or withdraw) on dest chain\\n     * @param _nft address of source NFT contract\\n     * @param _id nft token ID to bridge\\n     * @param _dstChid dest chain ID\\n     * @param _receiver receiver address on dest chain\\n     */\\n    function sendTo(\\n        address _nft,\\n        uint256 _id,\\n        uint64 _dstChid,\\n        address _receiver\\n    ) external payable whenNotPaused {\\n        require(msg.sender == INFT(_nft).ownerOf(_id), \\\"not token owner\\\");\\n        string memory _uri = INFT(_nft).tokenURI(_id);\\n        if (origNFT[_nft] == true) {\\n            // deposit\\n            INFT(_nft).transferFrom(msg.sender, address(this), _id);\\n            require(INFT(_nft).ownerOf(_id) == address(this), \\\"transfer NFT failed\\\");\\n        } else {\\n            // burn\\n            INFT(_nft).burn(_id);\\n        }\\n        (address _dstBridge, address _dstNft) = checkAddr(_nft, _dstChid);\\n        msgBus(_dstBridge, _dstChid, abi.encode(NFTMsg(_receiver, _dstNft, _id, _uri)));\\n        emit Sent(msg.sender, _nft, _id, _dstChid, _receiver, _dstNft);\\n    }\\n\\n    // ===== called by MCN NFT after NFT is burnt\\n    function sendMsg(\\n        uint64 _dstChid,\\n        address _sender,\\n        address _receiver,\\n        uint256 _id,\\n        string calldata _uri\\n    ) external payable whenNotPaused {\\n        address _nft = msg.sender;\\n        (address _dstBridge, address _dstNft) = checkAddr(_nft, _dstChid);\\n        msgBus(_dstBridge, _dstChid, abi.encode(NFTMsg(_receiver, _dstNft, _id, _uri)));\\n        emit Sent(_sender, _nft, _id, _dstChid, _receiver, _dstNft);\\n    }\\n\\n    // ===== called by msgbus\\n    function executeMessage(\\n        address sender,\\n        uint64 srcChid,\\n        bytes memory _message,\\n        address // executor\\n    ) external payable override onlyMessageBus returns (ExecutionStatus) {\\n        // Must check sender to ensure msg is from another nft bridge\\n        // but we allow retry later in case it's a temporary config error\\n        // risk is invalid sender will be retried but this can be easily filtered\\n        // in executor or require manual trigger for retry\\n        if (paused() || sender != destBridge[srcChid]) {\\n            return ExecutionStatus.Retry;\\n        }\\n        // withdraw original locked nft back to user, or mint new nft depending on if this is the orig chain of nft\\n        NFTMsg memory nftMsg = abi.decode((_message), (NFTMsg));\\n        // if we are on nft orig chain, use transfer, otherwise, use mint\\n        if (origNFT[nftMsg.nft] == true) {\\n            try INFT(nftMsg.nft).transferFrom(address(this), nftMsg.user, nftMsg.id) {\\n                // do nothing here to move on to emit Received event and return success\\n            } catch (bytes memory returnData) {\\n                emit ExtCallErr(returnData);\\n                return ExecutionStatus.Retry;\\n            }\\n        } else {\\n            try INFT(nftMsg.nft).bridgeMint(nftMsg.user, nftMsg.id, nftMsg.uri) {\\n                // do nothing here to move on to emit Received event and return success\\n            } catch (bytes memory returnData) {\\n                emit ExtCallErr(returnData);\\n                return ExecutionStatus.Retry;\\n            }\\n        }\\n        emit Received(nftMsg.user, nftMsg.nft, nftMsg.id, srcChid);\\n        return ExecutionStatus.Success;\\n    }\\n\\n    // ===== internal utils\\n    // check _nft and destChid are valid, return dstBridge and dstNft\\n    function checkAddr(address _nft, uint64 _dstChid) internal view returns (address dstBridge, address dstNft) {\\n        dstBridge = destBridge[_dstChid];\\n        require(dstBridge != address(0), \\\"dest NFT Bridge not found\\\");\\n        dstNft = destNFTAddr[_nft][_dstChid];\\n        require(dstNft != address(0), \\\"dest NFT not found\\\");\\n    }\\n\\n    // check fee and call msgbus sendMessage\\n    function msgBus(\\n        address _dstBridge,\\n        uint64 _dstChid,\\n        bytes memory message\\n    ) internal {\\n        uint256 fee = IMessageBus(messageBus).calcFee(message);\\n        require(msg.value >= fee + destTxFee[_dstChid], \\\"insufficient fee\\\");\\n        IMessageBus(messageBus).sendMessage{value: fee}(_dstBridge, _dstChid, message);\\n    }\\n\\n    // only owner\\n    // set per NFT, per chain id, address\\n    function setDestNFT(\\n        address srcNft,\\n        uint64 dstChid,\\n        address dstNft\\n    ) external onlyOwner {\\n        destNFTAddr[srcNft][dstChid] = dstNft;\\n        emit SetDestNFT(srcNft, dstChid, dstNft);\\n    }\\n\\n    // set all dest chains\\n    function setDestNFTs(\\n        address srcNft,\\n        uint64[] calldata dstChid,\\n        address[] calldata dstNft\\n    ) external onlyOwner {\\n        require(dstChid.length == dstNft.length, \\\"length mismatch\\\");\\n        for (uint256 i = 0; i < dstChid.length; i++) {\\n            destNFTAddr[srcNft][dstChid[i]] = dstNft[i];\\n        }\\n    }\\n\\n    // set destTxFee\\n    function setTxFee(uint64 chid, uint256 fee) external onlyOwner {\\n        destTxFee[chid] = fee;\\n        emit SetTxFee(chid, fee);\\n    }\\n\\n    // set per chain id, nft bridge address\\n    function setDestBridge(uint64 dstChid, address dstNftBridge) external onlyOwner {\\n        destBridge[dstChid] = dstNftBridge;\\n        emit SetDestBridge(dstChid, dstNftBridge);\\n    }\\n\\n    // batch set nft bridge addresses for multiple chainids\\n    function setDestBridges(uint64[] calldata dstChid, address[] calldata dstNftBridge) external onlyOwner {\\n        for (uint256 i = 0; i < dstChid.length; i++) {\\n            destBridge[dstChid[i]] = dstNftBridge[i];\\n        }\\n    }\\n\\n    // only called on NFT's orig chain, not applicable for mcn nft\\n    function setOrigNFT(address _nft) external onlyOwner {\\n        origNFT[_nft] = true;\\n        emit SetOrigNFT(_nft, true);\\n    }\\n\\n    // remove origNFT entry\\n    function delOrigNFT(address _nft) external onlyOwner {\\n        delete origNFT[_nft];\\n        emit SetOrigNFT(_nft, false);\\n    }\\n\\n    // send all gas token this contract has to owner\\n    function claimFee() external onlyOwner {\\n        uint256 amount = address(this).balance;\\n        payable(msg.sender).transfer(amount);\\n        emit FeeClaimed(amount);\\n    }\\n}\\n\",\"keccak256\":\"0x7822c1c91a61d5ae1c68b43558863941d0312c32a9228b50d16dd3dee1540efb\",\"license\":\"GPL-3.0-only\"},\"contracts/message/framework/MessageBusAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../../safeguard/Ownable.sol\\\";\\n\\nabstract contract MessageBusAddress is Ownable {\\n    event MessageBusUpdated(address messageBus);\\n\\n    address public messageBus;\\n\\n    function setMessageBus(address _messageBus) public onlyOwner {\\n        messageBus = _messageBus;\\n        emit MessageBusUpdated(messageBus);\\n    }\\n}\\n\",\"keccak256\":\"0xa5ba122d7b4f48d89cdb79b3678e392651457720ed52732f433ca7eca1ff182a\",\"license\":\"GPL-3.0-only\"},\"contracts/message/framework/MessageReceiverApp.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../interfaces/IMessageReceiverApp.sol\\\";\\nimport \\\"./MessageBusAddress.sol\\\";\\n\\nabstract contract MessageReceiverApp is IMessageReceiverApp, MessageBusAddress {\\n    modifier onlyMessageBus() {\\n        require(msg.sender == messageBus, \\\"caller is not message bus\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver) if the process is originated from MessageBus (MessageBusSender)'s\\n     *         sendMessageWithTransfer it is only called when the tokens are checked to be arrived at this contract's address.\\n     * @param _sender The address of the source app contract\\n     * @param _token The address of the token that comes out of the bridge\\n     * @param _amount The amount of tokens received at this contract through the cross-chain bridge.\\n     *        the contract that implements this contract can safely assume that the tokens will arrive before this\\n     *        function is called.\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransfer(\\n        address _sender,\\n        address _token,\\n        uint256 _amount,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable virtual override onlyMessageBus returns (ExecutionStatus) {}\\n\\n    /**\\n     * @notice Only called by MessageBus (MessageBusReceiver) if\\n     *         1. executeMessageWithTransfer reverts, or\\n     *         2. executeMessageWithTransfer returns ExecutionStatus.Fail\\n     * @param _sender The address of the source app contract\\n     * @param _token The address of the token that comes out of the bridge\\n     * @param _amount The amount of tokens received at this contract through the cross-chain bridge.\\n     *        the contract that implements this contract can safely assume that the tokens will arrive before this\\n     *        function is called.\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransferFallback(\\n        address _sender,\\n        address _token,\\n        uint256 _amount,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable virtual override onlyMessageBus returns (ExecutionStatus) {}\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver) to process refund of the original transfer from this contract\\n     * @param _token The token address of the original transfer\\n     * @param _amount The amount of the original transfer\\n     * @param _message The same message associated with the original transfer\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransferRefund(\\n        address _token,\\n        uint256 _amount,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable virtual override onlyMessageBus returns (ExecutionStatus) {}\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver)\\n     * @param _sender The address of the source app contract\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessage(\\n        address _sender,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable virtual override onlyMessageBus returns (ExecutionStatus) {}\\n}\\n\",\"keccak256\":\"0x83a77daf048cf19fa0a2c45eb577afb6d6363367fe012869201833e34a2b4e96\",\"license\":\"GPL-3.0-only\"},\"contracts/message/interfaces/IMessageBus.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../libraries/MsgDataTypes.sol\\\";\\n\\ninterface IMessageBus {\\n    function liquidityBridge() external view returns (address);\\n\\n    function pegBridge() external view returns (address);\\n\\n    function pegBridgeV2() external view returns (address);\\n\\n    function pegVault() external view returns (address);\\n\\n    function pegVaultV2() external view returns (address);\\n\\n    /**\\n     * @notice Calculates the required fee for the message.\\n     * @param _message Arbitrary message bytes to be decoded by the destination app contract.\\n     @ @return The required fee.\\n     */\\n    function calcFee(bytes calldata _message) external view returns (uint256);\\n\\n    /**\\n     * @notice Sends a message to a contract on another chain.\\n     * Sender needs to make sure the uniqueness of the message Id, which is computed as\\n     * hash(type.MessageOnly, sender, receiver, srcChainId, srcTxHash, dstChainId, message).\\n     * If messages with the same Id are sent, only one of them will succeed at dst chain..\\n     * A fee is charged in the native gas token.\\n     * @param _receiver The address of the destination app contract.\\n     * @param _dstChainId The destination chain ID.\\n     * @param _message Arbitrary message bytes to be decoded by the destination app contract.\\n     */\\n    function sendMessage(\\n        address _receiver,\\n        uint256 _dstChainId,\\n        bytes calldata _message\\n    ) external payable;\\n\\n    /**\\n     * @notice Sends a message associated with a transfer to a contract on another chain.\\n     * If messages with the same srcTransferId are sent, only one of them will succeed at dst chain..\\n     * A fee is charged in the native token.\\n     * @param _receiver The address of the destination app contract.\\n     * @param _dstChainId The destination chain ID.\\n     * @param _srcBridge The bridge contract to send the transfer with.\\n     * @param _srcTransferId The transfer ID.\\n     * @param _dstChainId The destination chain ID.\\n     * @param _message Arbitrary message bytes to be decoded by the destination app contract.\\n     */\\n    function sendMessageWithTransfer(\\n        address _receiver,\\n        uint256 _dstChainId,\\n        address _srcBridge,\\n        bytes32 _srcTransferId,\\n        bytes calldata _message\\n    ) external payable;\\n\\n    /**\\n     * @notice Withdraws message fee in the form of native gas token.\\n     * @param _account The address receiving the fee.\\n     * @param _cumulativeFee The cumulative fee credited to the account. Tracked by SGN.\\n     * @param _sigs The list of signatures sorted by signing addresses in ascending order. A withdrawal must be\\n     * signed-off by +2/3 of the sigsVerifier's current signing power to be delivered.\\n     * @param _signers The sorted list of signers.\\n     * @param _powers The signing powers of the signers.\\n     */\\n    function withdrawFee(\\n        address _account,\\n        uint256 _cumulativeFee,\\n        bytes[] calldata _sigs,\\n        address[] calldata _signers,\\n        uint256[] calldata _powers\\n    ) external;\\n\\n    /**\\n     * @notice Execute a message with a successful transfer.\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _transfer The transfer info.\\n     * @param _sigs The list of signatures sorted by signing addresses in ascending order. A relay must be signed-off by\\n     * +2/3 of the sigsVerifier's current signing power to be delivered.\\n     * @param _signers The sorted list of signers.\\n     * @param _powers The signing powers of the signers.\\n     */\\n    function executeMessageWithTransfer(\\n        bytes calldata _message,\\n        MsgDataTypes.TransferInfo calldata _transfer,\\n        bytes[] calldata _sigs,\\n        address[] calldata _signers,\\n        uint256[] calldata _powers\\n    ) external payable;\\n\\n    /**\\n     * @notice Execute a message with a refunded transfer.\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _transfer The transfer info.\\n     * @param _sigs The list of signatures sorted by signing addresses in ascending order. A relay must be signed-off by\\n     * +2/3 of the sigsVerifier's current signing power to be delivered.\\n     * @param _signers The sorted list of signers.\\n     * @param _powers The signing powers of the signers.\\n     */\\n    function executeMessageWithTransferRefund(\\n        bytes calldata _message, // the same message associated with the original transfer\\n        MsgDataTypes.TransferInfo calldata _transfer,\\n        bytes[] calldata _sigs,\\n        address[] calldata _signers,\\n        uint256[] calldata _powers\\n    ) external payable;\\n\\n    /**\\n     * @notice Execute a message not associated with a transfer.\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _sigs The list of signatures sorted by signing addresses in ascending order. A relay must be signed-off by\\n     * +2/3 of the sigsVerifier's current signing power to be delivered.\\n     * @param _signers The sorted list of signers.\\n     * @param _powers The signing powers of the signers.\\n     */\\n    function executeMessage(\\n        bytes calldata _message,\\n        MsgDataTypes.RouteInfo calldata _route,\\n        bytes[] calldata _sigs,\\n        address[] calldata _signers,\\n        uint256[] calldata _powers\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x2c76466764c1f3785a7f910ea6904f854050444ebf2968c5cb58d1efdff42cfb\",\"license\":\"GPL-3.0-only\"},\"contracts/message/interfaces/IMessageReceiverApp.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessageReceiverApp {\\n    enum ExecutionStatus {\\n        Fail, // execution failed, finalized\\n        Success, // execution succeeded, finalized\\n        Retry // execution rejected, can retry later\\n    }\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver) if the process is originated from MessageBus (MessageBusSender)'s\\n     *         sendMessageWithTransfer it is only called when the tokens are checked to be arrived at this contract's address.\\n     * @param _sender The address of the source app contract\\n     * @param _token The address of the token that comes out of the bridge\\n     * @param _amount The amount of tokens received at this contract through the cross-chain bridge.\\n     *        the contract that implements this contract can safely assume that the tokens will arrive before this\\n     *        function is called.\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransfer(\\n        address _sender,\\n        address _token,\\n        uint256 _amount,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable returns (ExecutionStatus);\\n\\n    /**\\n     * @notice Only called by MessageBus (MessageBusReceiver) if\\n     *         1. executeMessageWithTransfer reverts, or\\n     *         2. executeMessageWithTransfer returns ExecutionStatus.Fail\\n     * @param _sender The address of the source app contract\\n     * @param _token The address of the token that comes out of the bridge\\n     * @param _amount The amount of tokens received at this contract through the cross-chain bridge.\\n     *        the contract that implements this contract can safely assume that the tokens will arrive before this\\n     *        function is called.\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransferFallback(\\n        address _sender,\\n        address _token,\\n        uint256 _amount,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable returns (ExecutionStatus);\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver) to process refund of the original transfer from this contract\\n     * @param _token The token address of the original transfer\\n     * @param _amount The amount of the original transfer\\n     * @param _message The same message associated with the original transfer\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransferRefund(\\n        address _token,\\n        uint256 _amount,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable returns (ExecutionStatus);\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver)\\n     * @param _sender The address of the source app contract\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessage(\\n        address _sender,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable returns (ExecutionStatus);\\n}\\n\",\"keccak256\":\"0x9e4d6ec7303c40c1a8c897655c3d6ef6ae1f9fa7e8c806e7c6878ff01b51e67b\",\"license\":\"GPL-3.0-only\"},\"contracts/message/libraries/MsgDataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nlibrary MsgDataTypes {\\n    // bridge operation type at the sender side (src chain)\\n    enum BridgeSendType {\\n        Null,\\n        Liquidity,\\n        PegDeposit,\\n        PegBurn,\\n        PegV2Deposit,\\n        PegV2Burn,\\n        PegV2BurnFrom\\n    }\\n\\n    // bridge operation type at the receiver side (dst chain)\\n    enum TransferType {\\n        Null,\\n        LqRelay, // relay through liquidity bridge\\n        LqWithdraw, // withdraw from liquidity bridge\\n        PegMint, // mint through pegged token bridge\\n        PegWithdraw, // withdraw from original token vault\\n        PegV2Mint, // mint through pegged token bridge v2\\n        PegV2Withdraw // withdraw from original token vault v2\\n    }\\n\\n    enum MsgType {\\n        MessageWithTransfer,\\n        MessageOnly\\n    }\\n\\n    enum TxStatus {\\n        Null,\\n        Success,\\n        Fail,\\n        Fallback,\\n        Pending // transient state within a transaction\\n    }\\n\\n    struct TransferInfo {\\n        TransferType t;\\n        address sender;\\n        address receiver;\\n        address token;\\n        uint256 amount;\\n        uint64 wdseq; // only needed for LqWithdraw (refund)\\n        uint64 srcChainId;\\n        bytes32 refId;\\n        bytes32 srcTxHash; // src chain msg tx hash\\n    }\\n\\n    struct RouteInfo {\\n        address sender;\\n        address receiver;\\n        uint64 srcChainId;\\n        bytes32 srcTxHash; // src chain msg tx hash\\n    }\\n\\n    struct MsgWithTransferExecutionParams {\\n        bytes message;\\n        TransferInfo transfer;\\n        bytes[] sigs;\\n        address[] signers;\\n        uint256[] powers;\\n    }\\n\\n    struct BridgeTransferParams {\\n        bytes request;\\n        bytes[] sigs;\\n        address[] signers;\\n        uint256[] powers;\\n    }\\n}\\n\",\"keccak256\":\"0xeaa07a734c3e07b37c5c1b79703bf4ed6ac31ff390c9d8bf1cd9bd85061d3670\",\"license\":\"GPL-3.0-only\"},\"contracts/safeguard/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n *\\n * This adds a normal func that setOwner if _owner is address(0). So we can't allow\\n * renounceOwnership. So we can support Proxy based upgradable contract\\n */\\nabstract contract Ownable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Only to be called by inherit contracts, in their init func called by Proxy\\n     * we require _owner == address(0), which is only possible when it's a delegateCall\\n     * because constructor sets _owner in contract state.\\n     */\\n    function initOwner() internal {\\n        require(_owner == address(0), \\\"owner already set\\\");\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x2a92103195b8dce0f34fdf9bf7f94ddf38bf8edf0c0fd4be21323c47016687e9\",\"license\":\"GPL-3.0-only\"},\"contracts/safeguard/Pauser.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"./Ownable.sol\\\";\\n\\nabstract contract Pauser is Ownable, Pausable {\\n    mapping(address => bool) public pausers;\\n\\n    event PauserAdded(address account);\\n    event PauserRemoved(address account);\\n\\n    constructor() {\\n        _addPauser(msg.sender);\\n    }\\n\\n    modifier onlyPauser() {\\n        require(isPauser(msg.sender), \\\"Caller is not pauser\\\");\\n        _;\\n    }\\n\\n    function pause() public onlyPauser {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyPauser {\\n        _unpause();\\n    }\\n\\n    function isPauser(address account) public view returns (bool) {\\n        return pausers[account];\\n    }\\n\\n    function addPauser(address account) public onlyOwner {\\n        _addPauser(account);\\n    }\\n\\n    function removePauser(address account) public onlyOwner {\\n        _removePauser(account);\\n    }\\n\\n    function renouncePauser() public {\\n        _removePauser(msg.sender);\\n    }\\n\\n    function _addPauser(address account) private {\\n        require(!isPauser(account), \\\"Account is already pauser\\\");\\n        pausers[account] = true;\\n        emit PauserAdded(account);\\n    }\\n\\n    function _removePauser(address account) private {\\n        require(isPauser(account), \\\"Account is not pauser\\\");\\n        pausers[account] = false;\\n        emit PauserRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0x5d6bf2c82f3467d50d9f7c653b20a47ab3bbe3e81699600fc03eb8f796d005bb\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002bfe38038062002bfe833981016040819052620000349162000195565b6200003f336200007d565b6001805460ff60a01b191690556200005733620000cd565b600180546001600160a01b0319166001600160a01b0392909216919091179055620001c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526002602052604090205460ff16156200013b5760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c72656164792070617573657200000000000000604482015260640160405180910390fd5b6001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8910160405180910390a150565b600060208284031215620001a857600080fd5b81516001600160a01b0381168114620001c057600080fd5b9392505050565b612a2780620001d76000396000f3fe6080604052600436106101e35760003560e01c806380f51c12116101025780639e041b9d11610095578063da754f4411610064578063da754f44146105b0578063ed99bf43146105d0578063f0cb57ce146105f0578063f2fde38b1461060357600080fd5b80639e041b9d1461051c5780639f825f071461055d578063a1a227fa1461057d578063b2c887751461059d57600080fd5b806395b6a191116100d157806395b6a191146104b457806399d32fc4146104d45780639c1a65bd146104e95780639c649fdf1461050957600080fd5b806380f51c121461043157806382dc1ec4146104615780638456cb59146104815780638da5cb5b1461049657600080fd5b806343a8c1371161017a5780635c975abb116101495780635c975abb146103dd5780636b2c0f55146103fc5780636ef8d66d1461041c5780637cd2bffc146103ca57600080fd5b806343a8c1371461035157806346fbf68e14610371578063547cad12146103aa5780635ab7afc6146103ca57600080fd5b806319ab453c116101b657806319ab453c146102ae57806327cbe705146102ce5780632d5fa47c1461031c5780633f4ba83a1461033c57600080fd5b8063065c38fd146101e85780630bcb49821461020a5780631140c84e14610233578063151ff4eb14610273575b600080fd5b3480156101f457600080fd5b506102086102033660046120eb565b610623565b005b61021d610218366004612151565b6106e1565b60405161022a91906121c5565b60405180910390f35b34801561023f57600080fd5b5061026361024e3660046120eb565b60066020526000908152604090205460ff1681565b604051901515815260200161022a565b34801561027f57600080fd5b506102a061028e366004612205565b60036020526000908152604090205481565b60405190815260200161022a565b3480156102ba57600080fd5b506102086102c93660046120eb565b610747565b3480156102da57600080fd5b506103046102e9366004612205565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161022a565b34801561032857600080fd5b50610208610337366004612265565b610771565b34801561034857600080fd5b506102086108db565b34801561035d57600080fd5b5061020861036c3660046122e8565b610944565b34801561037d57600080fd5b5061026361038c3660046120eb565b6001600160a01b031660009081526002602052604090205460ff1690565b3480156103b657600080fd5b506102086103c53660046120eb565b610a49565b61021d6103d8366004612354565b610aee565b3480156103e957600080fd5b50600154600160a01b900460ff16610263565b34801561040857600080fd5b506102086104173660046120eb565b610b56565b34801561042857600080fd5b50610208610bb9565b34801561043d57600080fd5b5061026361044c3660046120eb565b60026020526000908152604090205460ff1681565b34801561046d57600080fd5b5061020861047c3660046120eb565b610bc2565b34801561048d57600080fd5b50610208610c22565b3480156104a257600080fd5b506000546001600160a01b0316610304565b3480156104c057600080fd5b506102086104cf3660046123eb565b610c89565b3480156104e057600080fd5b50610208610d69565b3480156104f557600080fd5b506102a0610504366004612434565b610e20565b61021d6105173660046124e2565b610fa7565b34801561052857600080fd5b50610304610537366004612596565b60056020908152600092835260408084209091529082529020546001600160a01b031681565b34801561056957600080fd5b506102086105783660046125cb565b611288565b34801561058957600080fd5b50600154610304906001600160a01b031681565b6102086105ab3660046125f5565b611339565b3480156105bc57600080fd5b506102086105cb366004612646565b61177a565b3480156105dc57600080fd5b506102086105eb3660046120eb565b61183b565b6102086105fe36600461267d565b6118e9565b34801561060f57600080fd5b5061020861061e3660046120eb565b611a39565b336106366000546001600160a01b031690565b6001600160a01b03161461067f5760405162461bcd60e51b815260206004820181905260248201526000805160206129d283398151915260448201526064015b60405180910390fd5b6001600160a01b038116600081815260066020908152604091829020805460ff191660019081179091558251938452908301527f9800fb32bf5eb9a3b2e42c910912da10ed1881dc538475101797669146166bf891015b60405180910390a150565b6001546000906001600160a01b0316331461073e5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d65737361676520627573000000000000006044820152606401610676565b95945050505050565b61074f611b15565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b336107846000546001600160a01b031690565b6001600160a01b0316146107c85760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b8281146108175760405162461bcd60e51b815260206004820152600f60248201527f6c656e677468206d69736d6174636800000000000000000000000000000000006044820152606401610676565b60005b838110156108d35782828281811061083457610834612700565b905060200201602081019061084991906120eb565b6001600160a01b03871660009081526005602052604081209087878581811061087457610874612700565b90506020020160208101906108899190612205565b67ffffffffffffffff168152602081019190915260400160002080546001600160a01b0319166001600160a01b0392909216919091179055806108cb8161272c565b91505061081a565b505050505050565b3360009081526002602052604090205460ff1661093a5760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f74207061757365720000000000000000000000006044820152606401610676565b610942611b77565b565b336109576000546001600160a01b031690565b6001600160a01b03161461099b5760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b60005b83811015610a42578282828181106109b8576109b8612700565b90506020020160208101906109cd91906120eb565b600460008787858181106109e3576109e3612700565b90506020020160208101906109f89190612205565b67ffffffffffffffff168152602081019190915260400160002080546001600160a01b0319166001600160a01b039290921691909117905580610a3a8161272c565b91505061099e565b5050505050565b33610a5c6000546001600160a01b031690565b6001600160a01b031614610aa05760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f3f8223bcd8b3b875473e9f9e14e1ad075451a2b5ffd31591655da9a01516bf5e906020016106d6565b6001546000906001600160a01b03163314610b4b5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d65737361676520627573000000000000006044820152606401610676565b979650505050505050565b33610b696000546001600160a01b031690565b6001600160a01b031614610bad5760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b610bb681611c1d565b50565b61094233611c1d565b33610bd56000546001600160a01b031690565b6001600160a01b031614610c195760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b610bb681611cd6565b3360009081526002602052604090205460ff16610c815760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f74207061757365720000000000000000000000006044820152606401610676565b610942611d93565b33610c9c6000546001600160a01b031690565b6001600160a01b031614610ce05760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b6001600160a01b03838116600081815260056020908152604080832067ffffffffffffffff88168085529083529281902080546001600160a01b03191695871695861790558051938452908301919091528101919091527fa5a9b84f1b7eb437335ea919a3ff6de6e242e4733d0100a773911061737948719060600160405180910390a1505050565b33610d7c6000546001600160a01b031690565b6001600160a01b031614610dc05760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b6040514790339082156108fc029083906000818181858888f19350505050158015610def573d6000803e3d6000fd5b506040518181527f62b10e3ff3d45b5ff546e740b893897facb1680285f989a64ae932d62c5388e1906020016106d6565b60405163c87b56dd60e01b81526004810182905260009081906001600160a01b0385169063c87b56dd9060240160006040518083038186803b158015610e6557600080fd5b505afa158015610e79573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ea191908101906127bc565b905060006040518060800160405280866001600160a01b03168152602001866001600160a01b0316815260200185815260200183815250604051602001610ee8919061281d565b60408051601f1981840301815282825267ffffffffffffffff891660009081526003602052919091205460015463299aee5160e11b8452919350916001600160a01b0390911690635335dca290610f43908590600401612863565b60206040518083038186803b158015610f5b57600080fd5b505afa158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f939190612876565b610f9d919061288f565b9695505050505050565b6001546000906001600160a01b031633146110045760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d65737361676520627573000000000000006044820152606401610676565b600154600160a01b900460ff1680611041575067ffffffffffffffff84166000908152600460205260409020546001600160a01b03868116911614155b1561104e57506002611280565b60008380602001905181019061106491906128a7565b6020808201516001600160a01b031660009081526006909152604090205490915060ff1615156001141561117b576020810151815160408084015190516323b872dd60e01b81523060048201526001600160a01b03928316602482015260448101919091529116906323b872dd90606401600060405180830381600087803b1580156110ef57600080fd5b505af1925050508015611100575060015b611176573d80801561112e576040519150601f19603f3d011682016040523d82523d6000602084013e611133565b606091505b507f2c4d9008b1f58a23591c25a813b398a54f438d50b85bedea3d6e7302ee08a810816040516111639190612863565b60405180910390a1600292505050611280565b611213565b60208101518151604080840151606085015191516333eba6f160e11b81526001600160a01b03909416936367d74de2936111ba9390929160040161295a565b600060405180830381600087803b1580156111d457600080fd5b505af19250505080156111e5575060015b611213573d80801561112e576040519150601f19603f3d011682016040523d82523d6000602084013e611133565b805160208083015160408085015181516001600160a01b03958616815294909216928401929092528282015267ffffffffffffffff87166060830152517f0aac355db06d21352d6b898d8e0ae1334d55f65b6c4c09e26951166a8eb4dba79181900360800190a160019150505b949350505050565b3361129b6000546001600160a01b031690565b6001600160a01b0316146112df5760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b67ffffffffffffffff8216600081815260036020908152604091829020849055815192835282018390527f446a287c2114fa54d0083d97ce8f6f15b2ce29fa1c2df4b5a580d581ea7c4ad391015b60405180910390a15050565b600154600160a01b900460ff16156113865760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610676565b6040516331a9108f60e11b8152600481018490526001600160a01b03851690636352211e9060240160206040518083038186803b1580156113c657600080fd5b505afa1580156113da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fe9190612982565b6001600160a01b0316336001600160a01b03161461145e5760405162461bcd60e51b815260206004820152600f60248201527f6e6f7420746f6b656e206f776e657200000000000000000000000000000000006044820152606401610676565b60405163c87b56dd60e01b8152600481018490526000906001600160a01b0386169063c87b56dd9060240160006040518083038186803b1580156114a157600080fd5b505afa1580156114b5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114dd91908101906127bc565b6001600160a01b03861660009081526006602052604090205490915060ff16151560011415611641576040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b038616906323b872dd90606401600060405180830381600087803b15801561155457600080fd5b505af1158015611568573d6000803e3d6000fd5b50506040516331a9108f60e11b8152600481018790523092506001600160a01b0388169150636352211e9060240160206040518083038186803b1580156115ae57600080fd5b505afa1580156115c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e69190612982565b6001600160a01b03161461163c5760405162461bcd60e51b815260206004820152601360248201527f7472616e73666572204e4654206661696c6564000000000000000000000000006044820152606401610676565b61169c565b604051630852cd8d60e31b8152600481018590526001600160a01b038616906342966c6890602401600060405180830381600087803b15801561168357600080fd5b505af1158015611697573d6000803e3d6000fd5b505050505b6000806116a98786611e1b565b9150915061170982866040518060800160405280886001600160a01b03168152602001856001600160a01b031681526020018a8152602001878152506040516020016116f5919061281d565b604051602081830303815290604052611f11565b604080513381526001600160a01b03898116602083015281830189905267ffffffffffffffff881660608301528681166080830152831660a082015290517f40143e5b72b2109d658cfa709dec6213f60364dbd08b7253cdaf5f4e0c49561c9181900360c00190a150505050505050565b3361178d6000546001600160a01b031690565b6001600160a01b0316146117d15760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b67ffffffffffffffff821660008181526004602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251938452908301527f3e776334b24c927645043308f89ac1ca734002e5a921ff384a70dcbb88c92cd4910161132d565b3361184e6000546001600160a01b031690565b6001600160a01b0316146118925760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b6001600160a01b0381166000818152600660209081526040808320805460ff191690558051938452908301919091527f9800fb32bf5eb9a3b2e42c910912da10ed1881dc538475101797669146166bf891016106d6565b600154600160a01b900460ff16156119365760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610676565b33600080611944838a611e1b565b915091506119c4828a60405180608001604052808b6001600160a01b03168152602001856001600160a01b031681526020018a815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040516116f5919060200161281d565b604080516001600160a01b038a81168252858116602083015281830189905267ffffffffffffffff8c1660608301528981166080830152831660a082015290517f40143e5b72b2109d658cfa709dec6213f60364dbd08b7253cdaf5f4e0c49561c9181900360c00190a1505050505050505050565b33611a4c6000546001600160a01b031690565b6001600160a01b031614611a905760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b6001600160a01b038116611b0c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610676565b610bb681612076565b6000546001600160a01b031615611b6e5760405162461bcd60e51b815260206004820152601160248201527f6f776e657220616c7265616479207365740000000000000000000000000000006044820152606401610676565b61094233612076565b600154600160a01b900460ff16611bd05760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610676565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03811660009081526002602052604090205460ff16611c855760405162461bcd60e51b815260206004820152601560248201527f4163636f756e74206973206e6f742070617573657200000000000000000000006044820152606401610676565b6001600160a01b038116600081815260026020908152604091829020805460ff1916905590519182527fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e91016106d6565b6001600160a01b03811660009081526002602052604090205460ff1615611d3f5760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c726561647920706175736572000000000000006044820152606401610676565b6001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f891016106d6565b600154600160a01b900460ff1615611de05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610676565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611c003390565b67ffffffffffffffff81166000908152600460205260408120546001600160a01b03169081611e8c5760405162461bcd60e51b815260206004820152601960248201527f64657374204e465420427269646765206e6f7420666f756e64000000000000006044820152606401610676565b506001600160a01b03808416600090815260056020908152604080832067ffffffffffffffff871684529091529020541680611f0a5760405162461bcd60e51b815260206004820152601260248201527f64657374204e4654206e6f7420666f756e6400000000000000000000000000006044820152606401610676565b9250929050565b60015460405163299aee5160e11b81526000916001600160a01b031690635335dca290611f42908590600401612863565b60206040518083038186803b158015611f5a57600080fd5b505afa158015611f6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f929190612876565b67ffffffffffffffff8416600090815260036020526040902054909150611fb9908261288f565b3410156120085760405162461bcd60e51b815260206004820152601060248201527f696e73756666696369656e7420666565000000000000000000000000000000006044820152606401610676565b600154604051634f9e72ad60e11b81526001600160a01b0390911690639f3ce55a90839061203e9088908890889060040161299f565b6000604051808303818588803b15801561205757600080fd5b505af115801561206b573d6000803e3d6000fd5b505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610bb657600080fd5b80356120e6816120c6565b919050565b6000602082840312156120fd57600080fd5b8135612108816120c6565b9392505050565b60008083601f84011261212157600080fd5b50813567ffffffffffffffff81111561213957600080fd5b602083019150836020828501011115611f0a57600080fd5b60008060008060006080868803121561216957600080fd5b8535612174816120c6565b945060208601359350604086013567ffffffffffffffff81111561219757600080fd5b6121a38882890161210f565b90945092505060608601356121b7816120c6565b809150509295509295909350565b60208101600383106121e757634e487b7160e01b600052602160045260246000fd5b91905290565b803567ffffffffffffffff811681146120e657600080fd5b60006020828403121561221757600080fd5b612108826121ed565b60008083601f84011261223257600080fd5b50813567ffffffffffffffff81111561224a57600080fd5b6020830191508360208260051b8501011115611f0a57600080fd5b60008060008060006060868803121561227d57600080fd5b8535612288816120c6565b9450602086013567ffffffffffffffff808211156122a557600080fd5b6122b189838a01612220565b909650945060408801359150808211156122ca57600080fd5b506122d788828901612220565b969995985093965092949392505050565b600080600080604085870312156122fe57600080fd5b843567ffffffffffffffff8082111561231657600080fd5b61232288838901612220565b9096509450602087013591508082111561233b57600080fd5b5061234887828801612220565b95989497509550505050565b600080600080600080600060c0888a03121561236f57600080fd5b873561237a816120c6565b9650602088013561238a816120c6565b95506040880135945061239f606089016121ed565b9350608088013567ffffffffffffffff8111156123bb57600080fd5b6123c78a828b0161210f565b90945092505060a08801356123db816120c6565b8091505092959891949750929550565b60008060006060848603121561240057600080fd5b833561240b816120c6565b9250612419602085016121ed565b91506040840135612429816120c6565b809150509250925092565b60008060006060848603121561244957600080fd5b612452846121ed565b92506020840135612462816120c6565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156124b2576124b2612473565b604052919050565b600067ffffffffffffffff8211156124d4576124d4612473565b50601f01601f191660200190565b600080600080608085870312156124f857600080fd5b8435612503816120c6565b9350612511602086016121ed565b9250604085013567ffffffffffffffff81111561252d57600080fd5b8501601f8101871361253e57600080fd5b803561255161254c826124ba565b612489565b81815288602083850101111561256657600080fd5b8160208401602083013760006020838301015280945050505061258b606086016120db565b905092959194509250565b600080604083850312156125a957600080fd5b82356125b4816120c6565b91506125c2602084016121ed565b90509250929050565b600080604083850312156125de57600080fd5b6125e7836121ed565b946020939093013593505050565b6000806000806080858703121561260b57600080fd5b8435612616816120c6565b93506020850135925061262b604086016121ed565b9150606085013561263b816120c6565b939692955090935050565b6000806040838503121561265957600080fd5b612662836121ed565b91506020830135612672816120c6565b809150509250929050565b60008060008060008060a0878903121561269657600080fd5b61269f876121ed565b955060208701356126af816120c6565b945060408701356126bf816120c6565b935060608701359250608087013567ffffffffffffffff8111156126e257600080fd5b6126ee89828a0161210f565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561274057612740612716565b5060010190565b60005b8381101561276257818101518382015260200161274a565b83811115612771576000848401525b50505050565b600082601f83011261278857600080fd5b815161279661254c826124ba565b8181528460208386010111156127ab57600080fd5b611280826020830160208701612747565b6000602082840312156127ce57600080fd5b815167ffffffffffffffff8111156127e557600080fd5b61128084828501612777565b60008151808452612809816020860160208601612747565b601f01601f19169290920160200192915050565b6020815260006001600160a01b038084511660208401528060208501511660408401525060408301516060830152606083015160808084015261128060a08401826127f1565b60208152600061210860208301846127f1565b60006020828403121561288857600080fd5b5051919050565b600082198211156128a2576128a2612716565b500190565b6000602082840312156128b957600080fd5b815167ffffffffffffffff808211156128d157600080fd5b90830190608082860312156128e557600080fd5b60405160808101818110838211171561290057612900612473565b604052825161290e816120c6565b8152602083015161291e816120c6565b60208201526040838101519082015260608301518281111561293f57600080fd5b61294b87828601612777565b60608301525095945050505050565b6001600160a01b038416815282602082015260606040820152600061073e60608301846127f1565b60006020828403121561299457600080fd5b8151612108816120c6565b6001600160a01b038416815267ffffffffffffffff8316602082015260606040820152600061073e60608301846127f156fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122022f557faeb42aaa66d859825b88ad3c21f8dadff872eeb9a080bcea65a677efe64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106101e35760003560e01c806380f51c12116101025780639e041b9d11610095578063da754f4411610064578063da754f44146105b0578063ed99bf43146105d0578063f0cb57ce146105f0578063f2fde38b1461060357600080fd5b80639e041b9d1461051c5780639f825f071461055d578063a1a227fa1461057d578063b2c887751461059d57600080fd5b806395b6a191116100d157806395b6a191146104b457806399d32fc4146104d45780639c1a65bd146104e95780639c649fdf1461050957600080fd5b806380f51c121461043157806382dc1ec4146104615780638456cb59146104815780638da5cb5b1461049657600080fd5b806343a8c1371161017a5780635c975abb116101495780635c975abb146103dd5780636b2c0f55146103fc5780636ef8d66d1461041c5780637cd2bffc146103ca57600080fd5b806343a8c1371461035157806346fbf68e14610371578063547cad12146103aa5780635ab7afc6146103ca57600080fd5b806319ab453c116101b657806319ab453c146102ae57806327cbe705146102ce5780632d5fa47c1461031c5780633f4ba83a1461033c57600080fd5b8063065c38fd146101e85780630bcb49821461020a5780631140c84e14610233578063151ff4eb14610273575b600080fd5b3480156101f457600080fd5b506102086102033660046120eb565b610623565b005b61021d610218366004612151565b6106e1565b60405161022a91906121c5565b60405180910390f35b34801561023f57600080fd5b5061026361024e3660046120eb565b60066020526000908152604090205460ff1681565b604051901515815260200161022a565b34801561027f57600080fd5b506102a061028e366004612205565b60036020526000908152604090205481565b60405190815260200161022a565b3480156102ba57600080fd5b506102086102c93660046120eb565b610747565b3480156102da57600080fd5b506103046102e9366004612205565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161022a565b34801561032857600080fd5b50610208610337366004612265565b610771565b34801561034857600080fd5b506102086108db565b34801561035d57600080fd5b5061020861036c3660046122e8565b610944565b34801561037d57600080fd5b5061026361038c3660046120eb565b6001600160a01b031660009081526002602052604090205460ff1690565b3480156103b657600080fd5b506102086103c53660046120eb565b610a49565b61021d6103d8366004612354565b610aee565b3480156103e957600080fd5b50600154600160a01b900460ff16610263565b34801561040857600080fd5b506102086104173660046120eb565b610b56565b34801561042857600080fd5b50610208610bb9565b34801561043d57600080fd5b5061026361044c3660046120eb565b60026020526000908152604090205460ff1681565b34801561046d57600080fd5b5061020861047c3660046120eb565b610bc2565b34801561048d57600080fd5b50610208610c22565b3480156104a257600080fd5b506000546001600160a01b0316610304565b3480156104c057600080fd5b506102086104cf3660046123eb565b610c89565b3480156104e057600080fd5b50610208610d69565b3480156104f557600080fd5b506102a0610504366004612434565b610e20565b61021d6105173660046124e2565b610fa7565b34801561052857600080fd5b50610304610537366004612596565b60056020908152600092835260408084209091529082529020546001600160a01b031681565b34801561056957600080fd5b506102086105783660046125cb565b611288565b34801561058957600080fd5b50600154610304906001600160a01b031681565b6102086105ab3660046125f5565b611339565b3480156105bc57600080fd5b506102086105cb366004612646565b61177a565b3480156105dc57600080fd5b506102086105eb3660046120eb565b61183b565b6102086105fe36600461267d565b6118e9565b34801561060f57600080fd5b5061020861061e3660046120eb565b611a39565b336106366000546001600160a01b031690565b6001600160a01b03161461067f5760405162461bcd60e51b815260206004820181905260248201526000805160206129d283398151915260448201526064015b60405180910390fd5b6001600160a01b038116600081815260066020908152604091829020805460ff191660019081179091558251938452908301527f9800fb32bf5eb9a3b2e42c910912da10ed1881dc538475101797669146166bf891015b60405180910390a150565b6001546000906001600160a01b0316331461073e5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d65737361676520627573000000000000006044820152606401610676565b95945050505050565b61074f611b15565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b336107846000546001600160a01b031690565b6001600160a01b0316146107c85760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b8281146108175760405162461bcd60e51b815260206004820152600f60248201527f6c656e677468206d69736d6174636800000000000000000000000000000000006044820152606401610676565b60005b838110156108d35782828281811061083457610834612700565b905060200201602081019061084991906120eb565b6001600160a01b03871660009081526005602052604081209087878581811061087457610874612700565b90506020020160208101906108899190612205565b67ffffffffffffffff168152602081019190915260400160002080546001600160a01b0319166001600160a01b0392909216919091179055806108cb8161272c565b91505061081a565b505050505050565b3360009081526002602052604090205460ff1661093a5760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f74207061757365720000000000000000000000006044820152606401610676565b610942611b77565b565b336109576000546001600160a01b031690565b6001600160a01b03161461099b5760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b60005b83811015610a42578282828181106109b8576109b8612700565b90506020020160208101906109cd91906120eb565b600460008787858181106109e3576109e3612700565b90506020020160208101906109f89190612205565b67ffffffffffffffff168152602081019190915260400160002080546001600160a01b0319166001600160a01b039290921691909117905580610a3a8161272c565b91505061099e565b5050505050565b33610a5c6000546001600160a01b031690565b6001600160a01b031614610aa05760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f3f8223bcd8b3b875473e9f9e14e1ad075451a2b5ffd31591655da9a01516bf5e906020016106d6565b6001546000906001600160a01b03163314610b4b5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d65737361676520627573000000000000006044820152606401610676565b979650505050505050565b33610b696000546001600160a01b031690565b6001600160a01b031614610bad5760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b610bb681611c1d565b50565b61094233611c1d565b33610bd56000546001600160a01b031690565b6001600160a01b031614610c195760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b610bb681611cd6565b3360009081526002602052604090205460ff16610c815760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f74207061757365720000000000000000000000006044820152606401610676565b610942611d93565b33610c9c6000546001600160a01b031690565b6001600160a01b031614610ce05760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b6001600160a01b03838116600081815260056020908152604080832067ffffffffffffffff88168085529083529281902080546001600160a01b03191695871695861790558051938452908301919091528101919091527fa5a9b84f1b7eb437335ea919a3ff6de6e242e4733d0100a773911061737948719060600160405180910390a1505050565b33610d7c6000546001600160a01b031690565b6001600160a01b031614610dc05760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b6040514790339082156108fc029083906000818181858888f19350505050158015610def573d6000803e3d6000fd5b506040518181527f62b10e3ff3d45b5ff546e740b893897facb1680285f989a64ae932d62c5388e1906020016106d6565b60405163c87b56dd60e01b81526004810182905260009081906001600160a01b0385169063c87b56dd9060240160006040518083038186803b158015610e6557600080fd5b505afa158015610e79573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ea191908101906127bc565b905060006040518060800160405280866001600160a01b03168152602001866001600160a01b0316815260200185815260200183815250604051602001610ee8919061281d565b60408051601f1981840301815282825267ffffffffffffffff891660009081526003602052919091205460015463299aee5160e11b8452919350916001600160a01b0390911690635335dca290610f43908590600401612863565b60206040518083038186803b158015610f5b57600080fd5b505afa158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f939190612876565b610f9d919061288f565b9695505050505050565b6001546000906001600160a01b031633146110045760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d65737361676520627573000000000000006044820152606401610676565b600154600160a01b900460ff1680611041575067ffffffffffffffff84166000908152600460205260409020546001600160a01b03868116911614155b1561104e57506002611280565b60008380602001905181019061106491906128a7565b6020808201516001600160a01b031660009081526006909152604090205490915060ff1615156001141561117b576020810151815160408084015190516323b872dd60e01b81523060048201526001600160a01b03928316602482015260448101919091529116906323b872dd90606401600060405180830381600087803b1580156110ef57600080fd5b505af1925050508015611100575060015b611176573d80801561112e576040519150601f19603f3d011682016040523d82523d6000602084013e611133565b606091505b507f2c4d9008b1f58a23591c25a813b398a54f438d50b85bedea3d6e7302ee08a810816040516111639190612863565b60405180910390a1600292505050611280565b611213565b60208101518151604080840151606085015191516333eba6f160e11b81526001600160a01b03909416936367d74de2936111ba9390929160040161295a565b600060405180830381600087803b1580156111d457600080fd5b505af19250505080156111e5575060015b611213573d80801561112e576040519150601f19603f3d011682016040523d82523d6000602084013e611133565b805160208083015160408085015181516001600160a01b03958616815294909216928401929092528282015267ffffffffffffffff87166060830152517f0aac355db06d21352d6b898d8e0ae1334d55f65b6c4c09e26951166a8eb4dba79181900360800190a160019150505b949350505050565b3361129b6000546001600160a01b031690565b6001600160a01b0316146112df5760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b67ffffffffffffffff8216600081815260036020908152604091829020849055815192835282018390527f446a287c2114fa54d0083d97ce8f6f15b2ce29fa1c2df4b5a580d581ea7c4ad391015b60405180910390a15050565b600154600160a01b900460ff16156113865760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610676565b6040516331a9108f60e11b8152600481018490526001600160a01b03851690636352211e9060240160206040518083038186803b1580156113c657600080fd5b505afa1580156113da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fe9190612982565b6001600160a01b0316336001600160a01b03161461145e5760405162461bcd60e51b815260206004820152600f60248201527f6e6f7420746f6b656e206f776e657200000000000000000000000000000000006044820152606401610676565b60405163c87b56dd60e01b8152600481018490526000906001600160a01b0386169063c87b56dd9060240160006040518083038186803b1580156114a157600080fd5b505afa1580156114b5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114dd91908101906127bc565b6001600160a01b03861660009081526006602052604090205490915060ff16151560011415611641576040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b038616906323b872dd90606401600060405180830381600087803b15801561155457600080fd5b505af1158015611568573d6000803e3d6000fd5b50506040516331a9108f60e11b8152600481018790523092506001600160a01b0388169150636352211e9060240160206040518083038186803b1580156115ae57600080fd5b505afa1580156115c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e69190612982565b6001600160a01b03161461163c5760405162461bcd60e51b815260206004820152601360248201527f7472616e73666572204e4654206661696c6564000000000000000000000000006044820152606401610676565b61169c565b604051630852cd8d60e31b8152600481018590526001600160a01b038616906342966c6890602401600060405180830381600087803b15801561168357600080fd5b505af1158015611697573d6000803e3d6000fd5b505050505b6000806116a98786611e1b565b9150915061170982866040518060800160405280886001600160a01b03168152602001856001600160a01b031681526020018a8152602001878152506040516020016116f5919061281d565b604051602081830303815290604052611f11565b604080513381526001600160a01b03898116602083015281830189905267ffffffffffffffff881660608301528681166080830152831660a082015290517f40143e5b72b2109d658cfa709dec6213f60364dbd08b7253cdaf5f4e0c49561c9181900360c00190a150505050505050565b3361178d6000546001600160a01b031690565b6001600160a01b0316146117d15760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b67ffffffffffffffff821660008181526004602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251938452908301527f3e776334b24c927645043308f89ac1ca734002e5a921ff384a70dcbb88c92cd4910161132d565b3361184e6000546001600160a01b031690565b6001600160a01b0316146118925760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b6001600160a01b0381166000818152600660209081526040808320805460ff191690558051938452908301919091527f9800fb32bf5eb9a3b2e42c910912da10ed1881dc538475101797669146166bf891016106d6565b600154600160a01b900460ff16156119365760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610676565b33600080611944838a611e1b565b915091506119c4828a60405180608001604052808b6001600160a01b03168152602001856001600160a01b031681526020018a815260200189898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152506040516116f5919060200161281d565b604080516001600160a01b038a81168252858116602083015281830189905267ffffffffffffffff8c1660608301528981166080830152831660a082015290517f40143e5b72b2109d658cfa709dec6213f60364dbd08b7253cdaf5f4e0c49561c9181900360c00190a1505050505050505050565b33611a4c6000546001600160a01b031690565b6001600160a01b031614611a905760405162461bcd60e51b815260206004820181905260248201526000805160206129d28339815191526044820152606401610676565b6001600160a01b038116611b0c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610676565b610bb681612076565b6000546001600160a01b031615611b6e5760405162461bcd60e51b815260206004820152601160248201527f6f776e657220616c7265616479207365740000000000000000000000000000006044820152606401610676565b61094233612076565b600154600160a01b900460ff16611bd05760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610676565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03811660009081526002602052604090205460ff16611c855760405162461bcd60e51b815260206004820152601560248201527f4163636f756e74206973206e6f742070617573657200000000000000000000006044820152606401610676565b6001600160a01b038116600081815260026020908152604091829020805460ff1916905590519182527fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e91016106d6565b6001600160a01b03811660009081526002602052604090205460ff1615611d3f5760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c726561647920706175736572000000000000006044820152606401610676565b6001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f891016106d6565b600154600160a01b900460ff1615611de05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610676565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611c003390565b67ffffffffffffffff81166000908152600460205260408120546001600160a01b03169081611e8c5760405162461bcd60e51b815260206004820152601960248201527f64657374204e465420427269646765206e6f7420666f756e64000000000000006044820152606401610676565b506001600160a01b03808416600090815260056020908152604080832067ffffffffffffffff871684529091529020541680611f0a5760405162461bcd60e51b815260206004820152601260248201527f64657374204e4654206e6f7420666f756e6400000000000000000000000000006044820152606401610676565b9250929050565b60015460405163299aee5160e11b81526000916001600160a01b031690635335dca290611f42908590600401612863565b60206040518083038186803b158015611f5a57600080fd5b505afa158015611f6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f929190612876565b67ffffffffffffffff8416600090815260036020526040902054909150611fb9908261288f565b3410156120085760405162461bcd60e51b815260206004820152601060248201527f696e73756666696369656e7420666565000000000000000000000000000000006044820152606401610676565b600154604051634f9e72ad60e11b81526001600160a01b0390911690639f3ce55a90839061203e9088908890889060040161299f565b6000604051808303818588803b15801561205757600080fd5b505af115801561206b573d6000803e3d6000fd5b505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610bb657600080fd5b80356120e6816120c6565b919050565b6000602082840312156120fd57600080fd5b8135612108816120c6565b9392505050565b60008083601f84011261212157600080fd5b50813567ffffffffffffffff81111561213957600080fd5b602083019150836020828501011115611f0a57600080fd5b60008060008060006080868803121561216957600080fd5b8535612174816120c6565b945060208601359350604086013567ffffffffffffffff81111561219757600080fd5b6121a38882890161210f565b90945092505060608601356121b7816120c6565b809150509295509295909350565b60208101600383106121e757634e487b7160e01b600052602160045260246000fd5b91905290565b803567ffffffffffffffff811681146120e657600080fd5b60006020828403121561221757600080fd5b612108826121ed565b60008083601f84011261223257600080fd5b50813567ffffffffffffffff81111561224a57600080fd5b6020830191508360208260051b8501011115611f0a57600080fd5b60008060008060006060868803121561227d57600080fd5b8535612288816120c6565b9450602086013567ffffffffffffffff808211156122a557600080fd5b6122b189838a01612220565b909650945060408801359150808211156122ca57600080fd5b506122d788828901612220565b969995985093965092949392505050565b600080600080604085870312156122fe57600080fd5b843567ffffffffffffffff8082111561231657600080fd5b61232288838901612220565b9096509450602087013591508082111561233b57600080fd5b5061234887828801612220565b95989497509550505050565b600080600080600080600060c0888a03121561236f57600080fd5b873561237a816120c6565b9650602088013561238a816120c6565b95506040880135945061239f606089016121ed565b9350608088013567ffffffffffffffff8111156123bb57600080fd5b6123c78a828b0161210f565b90945092505060a08801356123db816120c6565b8091505092959891949750929550565b60008060006060848603121561240057600080fd5b833561240b816120c6565b9250612419602085016121ed565b91506040840135612429816120c6565b809150509250925092565b60008060006060848603121561244957600080fd5b612452846121ed565b92506020840135612462816120c6565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156124b2576124b2612473565b604052919050565b600067ffffffffffffffff8211156124d4576124d4612473565b50601f01601f191660200190565b600080600080608085870312156124f857600080fd5b8435612503816120c6565b9350612511602086016121ed565b9250604085013567ffffffffffffffff81111561252d57600080fd5b8501601f8101871361253e57600080fd5b803561255161254c826124ba565b612489565b81815288602083850101111561256657600080fd5b8160208401602083013760006020838301015280945050505061258b606086016120db565b905092959194509250565b600080604083850312156125a957600080fd5b82356125b4816120c6565b91506125c2602084016121ed565b90509250929050565b600080604083850312156125de57600080fd5b6125e7836121ed565b946020939093013593505050565b6000806000806080858703121561260b57600080fd5b8435612616816120c6565b93506020850135925061262b604086016121ed565b9150606085013561263b816120c6565b939692955090935050565b6000806040838503121561265957600080fd5b612662836121ed565b91506020830135612672816120c6565b809150509250929050565b60008060008060008060a0878903121561269657600080fd5b61269f876121ed565b955060208701356126af816120c6565b945060408701356126bf816120c6565b935060608701359250608087013567ffffffffffffffff8111156126e257600080fd5b6126ee89828a0161210f565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561274057612740612716565b5060010190565b60005b8381101561276257818101518382015260200161274a565b83811115612771576000848401525b50505050565b600082601f83011261278857600080fd5b815161279661254c826124ba565b8181528460208386010111156127ab57600080fd5b611280826020830160208701612747565b6000602082840312156127ce57600080fd5b815167ffffffffffffffff8111156127e557600080fd5b61128084828501612777565b60008151808452612809816020860160208601612747565b601f01601f19169290920160200192915050565b6020815260006001600160a01b038084511660208401528060208501511660408401525060408301516060830152606083015160808084015261128060a08401826127f1565b60208152600061210860208301846127f1565b60006020828403121561288857600080fd5b5051919050565b600082198211156128a2576128a2612716565b500190565b6000602082840312156128b957600080fd5b815167ffffffffffffffff808211156128d157600080fd5b90830190608082860312156128e557600080fd5b60405160808101818110838211171561290057612900612473565b604052825161290e816120c6565b8152602083015161291e816120c6565b60208201526040838101519082015260608301518281111561293f57600080fd5b61294b87828601612777565b60608301525095945050505050565b6001600160a01b038416815282602082015260606040820152600061073e60608301846127f1565b60006020828403121561299457600080fd5b8151612108816120c6565b6001600160a01b038416815267ffffffffffffffff8316602082015260606040820152600061073e60608301846127f156fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122022f557faeb42aaa66d859825b88ad3c21f8dadff872eeb9a080bcea65a677efe64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeMessageWithTransfer(address,address,uint256,uint64,bytes,address)": {
        "params": {
          "_amount": "The amount of tokens received at this contract through the cross-chain bridge.        the contract that implements this contract can safely assume that the tokens will arrive before this        function is called.",
          "_executor": "Address who called the MessageBus execution function",
          "_message": "Arbitrary message bytes originated from and encoded by the source app contract",
          "_sender": "The address of the source app contract",
          "_srcChainId": "The source chain ID where the transfer is originated from",
          "_token": "The address of the token that comes out of the bridge"
        }
      },
      "executeMessageWithTransferFallback(address,address,uint256,uint64,bytes,address)": {
        "params": {
          "_amount": "The amount of tokens received at this contract through the cross-chain bridge.        the contract that implements this contract can safely assume that the tokens will arrive before this        function is called.",
          "_executor": "Address who called the MessageBus execution function",
          "_message": "Arbitrary message bytes originated from and encoded by the source app contract",
          "_sender": "The address of the source app contract",
          "_srcChainId": "The source chain ID where the transfer is originated from",
          "_token": "The address of the token that comes out of the bridge"
        }
      },
      "executeMessageWithTransferRefund(address,uint256,bytes,address)": {
        "params": {
          "_amount": "The amount of the original transfer",
          "_executor": "Address who called the MessageBus execution function",
          "_message": "The same message associated with the original transfer",
          "_token": "The token address of the original transfer"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "sendTo(address,uint256,uint64,address)": {
        "params": {
          "_dstChid": "dest chain ID",
          "_id": "nft token ID to bridge",
          "_nft": "address of source NFT contract",
          "_receiver": "receiver address on dest chain"
        }
      },
      "totalFee(uint64,address,uint256)": {
        "details": "we use _nft address for user as it's same length so same msg cost",
        "params": {
          "_dstChid": "dest chain ID",
          "_id": "token ID to bridge (need to get accurate tokenURI length)",
          "_nft": "address of source NFT contract"
        },
        "returns": {
          "_0": "total fee needed for user tx"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "NFT Bridge ",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "destBridge(uint64)": {
        "notice": "per dest chain id NFTBridge address"
      },
      "destNFTAddr(address,uint64)": {
        "notice": "first key is NFT address on this chain, 2nd key is dest chain id, value is address on dest chain"
      },
      "destTxFee(uint64)": {
        "notice": "per dest chain id executor fee in this chain's gas token"
      },
      "executeMessageWithTransfer(address,address,uint256,uint64,bytes,address)": {
        "notice": "Called by MessageBus (MessageBusReceiver) if the process is originated from MessageBus (MessageBusSender)'s         sendMessageWithTransfer it is only called when the tokens are checked to be arrived at this contract's address."
      },
      "executeMessageWithTransferFallback(address,address,uint256,uint64,bytes,address)": {
        "notice": "Only called by MessageBus (MessageBusReceiver) if         1. executeMessageWithTransfer reverts, or         2. executeMessageWithTransfer returns ExecutionStatus.Fail"
      },
      "executeMessageWithTransferRefund(address,uint256,bytes,address)": {
        "notice": "Called by MessageBus (MessageBusReceiver) to process refund of the original transfer from this contract"
      },
      "origNFT(address)": {
        "notice": "only set to true if NFT addr on this chain is the orig, so we will use deposit/withdraw instead of burn/mint. not applicable for mcn nft (always burn/mint)"
      },
      "sendTo(address,uint256,uint64,address)": {
        "notice": "locks or burn user's NFT in this contract and send message to mint (or withdraw) on dest chain"
      },
      "totalFee(uint64,address,uint256)": {
        "notice": "totalFee returns gas token value to be set in user tx, includes both cbridge msg fee and executor fee on dest chain"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20866,
        "contract": "contracts/message/apps/NFTBridge.sol:NFTBridge",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12859,
        "contract": "contracts/message/apps/NFTBridge.sol:NFTBridge",
        "label": "messageBus",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/message/apps/NFTBridge.sol:NFTBridge",
        "label": "_paused",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 20980,
        "contract": "contracts/message/apps/NFTBridge.sol:NFTBridge",
        "label": "pausers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10793,
        "contract": "contracts/message/apps/NFTBridge.sol:NFTBridge",
        "label": "destTxFee",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint64,t_uint256)"
      },
      {
        "astId": 10798,
        "contract": "contracts/message/apps/NFTBridge.sol:NFTBridge",
        "label": "destBridge",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint64,t_address)"
      },
      {
        "astId": 10805,
        "contract": "contracts/message/apps/NFTBridge.sol:NFTBridge",
        "label": "destNFTAddr",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_uint64,t_address))"
      },
      {
        "astId": 10810,
        "contract": "contracts/message/apps/NFTBridge.sol:NFTBridge",
        "label": "origNFT",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint64,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint64 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint64,t_address)"
      },
      "t_mapping(t_uint64,t_address)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint64,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}