{
  "address": "0x0F66505556029649B74AA3877Ab710A451854b19",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "srcChainId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        }
      ],
      "name": "MessageExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "quorumThreshold",
          "type": "uint64"
        }
      ],
      "name": "QuorumThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiverAdapter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "power",
          "type": "uint64"
        }
      ],
      "name": "ReceiverAdapterUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "srcChainId",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "bridgeName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiverAddr",
          "type": "address"
        }
      ],
      "name": "SingleBridgeMsgReceived",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "THRESHOLD_DECIMAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "srcChainId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "dstChainId",
              "type": "uint64"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "bridgeName",
              "type": "string"
            }
          ],
          "internalType": "struct MessageStruct.Message",
          "name": "_message",
          "type": "tuple"
        }
      ],
      "name": "getMsgId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_receiverAdapters",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "_powers",
          "type": "uint32[]"
        },
        {
          "internalType": "uint64",
          "name": "_quorumThreshold",
          "type": "uint64"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "msgInfos",
      "outputs": [
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumThreshold",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "srcChainId",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "dstChainId",
              "type": "uint64"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "string",
              "name": "bridgeName",
              "type": "string"
            }
          ],
          "internalType": "struct MessageStruct.Message",
          "name": "_message",
          "type": "tuple"
        }
      ],
      "name": "receiveMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "receiverAdapterPowers",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "receiverAdapters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPower",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_quorumThreshold",
          "type": "uint64"
        }
      ],
      "name": "updateQuorumThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_receiverAdapters",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "_powers",
          "type": "uint32[]"
        }
      ],
      "name": "updateReceiverAdapter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcc73ce48baf83781c6b8d87ffc65aa13f0221de3084dc1bfee06567a28e676a7",
  "receipt": {
    "to": null,
    "from": "0xFf370251BDbe480b1164C383Df99B9EbD3FA12C3",
    "contractAddress": "0x0F66505556029649B74AA3877Ab710A451854b19",
    "transactionIndex": 4,
    "gasUsed": "1320367",
    "logsBloom": "0x
    "blockHash": "0x853c000d91c4ab0595d494b34703d513e554414329e4a4949644999b738de3e5",
    "transactionHash": "0xcc73ce48baf83781c6b8d87ffc65aa13f0221de3084dc1bfee06567a28e676a7",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 32101950,
        "transactionHash": "0xcc73ce48baf83781c6b8d87ffc65aa13f0221de3084dc1bfee06567a28e676a7",
        "address": "0x0F66505556029649B74AA3877Ab710A451854b19",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ff370251bdbe480b1164c383df99b9ebd3fa12c3"
        ],
        "data": "0x",
        "logIndex": 12,
        "blockHash": "0x853c000d91c4ab0595d494b34703d513e554414329e4a4949644999b738de3e5"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 32101950,
        "transactionHash": "0xcc73ce48baf83781c6b8d87ffc65aa13f0221de3084dc1bfee06567a28e676a7",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000ff370251bdbe480b1164c383df99b9ebd3fa12c3",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000007094cd90321000000000000000000000000000000000000000000000000000294954e341f453a000000000000000000000000000000000000000000000d9a3314fecebe8f746d000000000000000000000000000000000000000000000000028d8c015b1c243a000000000000000000000000000000000000000000000d9a331c081b9792956d",
        "logIndex": 13,
        "blockHash": "0x853c000d91c4ab0595d494b34703d513e554414329e4a4949644999b738de3e5"
      }
    ],
    "blockNumber": 32101950,
    "cumulativeGasUsed": "1574043",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f0ff772b27e18f703fe2c68e46ad4021",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"MessageExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"quorumThreshold\",\"type\":\"uint64\"}],\"name\":\"QuorumThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiverAdapter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"power\",\"type\":\"uint64\"}],\"name\":\"ReceiverAdapterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"bridgeName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiverAddr\",\"type\":\"address\"}],\"name\":\"SingleBridgeMsgReceived\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"THRESHOLD_DECIMAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"dstChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"bridgeName\",\"type\":\"string\"}],\"internalType\":\"struct MessageStruct.Message\",\"name\":\"_message\",\"type\":\"tuple\"}],\"name\":\"getMsgId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_receiverAdapters\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"_powers\",\"type\":\"uint32[]\"},{\"internalType\":\"uint64\",\"name\":\"_quorumThreshold\",\"type\":\"uint64\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"msgInfos\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumThreshold\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"dstChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"bridgeName\",\"type\":\"string\"}],\"internalType\":\"struct MessageStruct.Message\",\"name\":\"_message\",\"type\":\"tuple\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverAdapterPowers\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"receiverAdapters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPower\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_quorumThreshold\",\"type\":\"uint64\"}],\"name\":\"updateQuorumThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_receiverAdapters\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"_powers\",\"type\":\"uint32[]\"}],\"name\":\"updateReceiverAdapter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getMsgId((uint64,uint64,uint32,address,bytes,string))\":{\"notice\":\"Compute message Id. message.bridgeName is not included in the message id.\"},\"initialize(address[],uint32[],uint64)\":{\"notice\":\"A one-time function to initialize contract states by the owner. The contract ownership will be renounced at the end of this call.\"},\"receiveMessage((uint64,uint64,uint32,address,bytes,string))\":{\"notice\":\"Receive messages from allowed bridge receiver adapters. If the accumulated power of a message has reached the power threshold, this message will be executed immediately, which will invoke an external function call according to the message content.\"},\"updateQuorumThreshold(uint64)\":{\"notice\":\"Update power quorum threshold of message execution. This function can only be called by _executeMessage() invoked within receiveMessage() of this contract, which means the only party who can make these updates is the caller of the MultiBridgeSender at the source chain.\"},\"updateReceiverAdapter(address[],uint32[])\":{\"notice\":\"Update bridge receiver adapters. This function can only be called by _executeMessage() invoked within receiveMessage() of this contract, which means the only party who can make these updates is the caller of the MultiBridgeSender at the source chain.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/message/apps/multibridge/MultiBridgeReceiver.sol\":\"MultiBridgeReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/message/apps/multibridge/MessageStruct.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n\\r\\npragma solidity >=0.8.9;\\r\\n\\r\\nlibrary MessageStruct {\\r\\n    /**\\r\\n     * @dev Message indicates a remote call to target contract on destination chain.\\r\\n     *\\r\\n     * @param srcChainId is the id of chain where this message is sent from.\\r\\n     * @param dstChainId is the id of chain where this message is sent to.\\r\\n     * @param nonce is an incrementing number held by MultiBridgeSender to ensure msgId uniqueness\\r\\n     * @param target is the contract to be called on dst chain.\\r\\n     * @param callData is the data to be sent to target by low-level call(eg. address(target).call(callData)).\\r\\n     * @param bridgeName is the message bridge name used for sending this message.\\r\\n     */\\r\\n    struct Message {\\r\\n        uint64 srcChainId;\\r\\n        uint64 dstChainId;\\r\\n        uint32 nonce;\\r\\n        address target;\\r\\n        bytes callData;\\r\\n        string bridgeName;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf6d9ea95bc7ab487a1a0bc845a9efcb9410c7ea9688a418fd2b7e2005141b696\",\"license\":\"GPL-3.0-only\"},\"contracts/message/apps/multibridge/MultiBridgeReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n\\r\\npragma solidity >=0.8.9;\\r\\n\\r\\nimport \\\"./interfaces/IMultiBridgeReceiver.sol\\\";\\r\\nimport \\\"./MessageStruct.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract MultiBridgeReceiver is IMultiBridgeReceiver, Ownable {\\r\\n    uint256 public constant THRESHOLD_DECIMAL = 100;\\r\\n    // minimum accumulated power precentage for each message to be executed\\r\\n    uint64 public quorumThreshold;\\r\\n\\r\\n    address[] public receiverAdapters;\\r\\n    // receiverAdapter => power of bridge receive adapers\\r\\n    mapping(address => uint64) public receiverAdapterPowers;\\r\\n    // total power of all bridge adapters\\r\\n    uint64 public totalPower;\\r\\n\\r\\n    struct MsgInfo {\\r\\n        bool executed;\\r\\n        mapping(address => bool) from; // bridge receiver adapters that has already delivered this message.\\r\\n    }\\r\\n    // msgId => MsgInfo\\r\\n    mapping(bytes32 => MsgInfo) public msgInfos;\\r\\n\\r\\n    event ReceiverAdapterUpdated(address receiverAdapter, uint64 power);\\r\\n    event QuorumThresholdUpdated(uint64 quorumThreshold);\\r\\n    event SingleBridgeMsgReceived(uint64 srcChainId, string indexed bridgeName, uint32 nonce, address receiverAddr);\\r\\n    event MessageExecuted(uint64 srcChainId, uint32 nonce, address target, bytes callData);\\r\\n\\r\\n    modifier onlyReceiverAdapter() {\\r\\n        require(receiverAdapterPowers[msg.sender] > 0, \\\"not allowed bridge receiver adapter\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice A modifier used for restricting the caller of some functions to be this contract itself.\\r\\n     */\\r\\n    modifier onlySelf() {\\r\\n        require(msg.sender == address(this), \\\"not self\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice A one-time function to initialize contract states by the owner.\\r\\n     * The contract ownership will be renounced at the end of this call.\\r\\n     */\\r\\n    function initialize(\\r\\n        address[] memory _receiverAdapters,\\r\\n        uint32[] memory _powers,\\r\\n        uint64 _quorumThreshold\\r\\n    ) external onlyOwner {\\r\\n        require(_receiverAdapters.length == _powers.length, \\\"mismatch length\\\");\\r\\n        require(_quorumThreshold <= THRESHOLD_DECIMAL, \\\"invalid threshold\\\");\\r\\n        for (uint256 i = 0; i < _receiverAdapters.length; i++) {\\r\\n            _updateReceiverAdapter(_receiverAdapters[i], _powers[i]);\\r\\n        }\\r\\n        quorumThreshold = _quorumThreshold;\\r\\n        renounceOwnership();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Receive messages from allowed bridge receiver adapters.\\r\\n     * If the accumulated power of a message has reached the power threshold,\\r\\n     * this message will be executed immediately, which will invoke an external function call\\r\\n     * according to the message content.\\r\\n     */\\r\\n    function receiveMessage(MessageStruct.Message calldata _message) external override onlyReceiverAdapter {\\r\\n        bytes32 msgId = getMsgId(_message);\\r\\n        MsgInfo storage msgInfo = msgInfos[msgId];\\r\\n        require(msgInfo.from[msg.sender] == false, \\\"already received from this bridge adapter\\\");\\r\\n        msgInfo.from[msg.sender] = true;\\r\\n        emit SingleBridgeMsgReceived(_message.srcChainId, _message.bridgeName, _message.nonce, msg.sender);\\r\\n\\r\\n        _executeMessage(_message, msgInfo);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Update bridge receiver adapters.\\r\\n     * This function can only be called by _executeMessage() invoked within receiveMessage() of this contract,\\r\\n     * which means the only party who can make these updates is the caller of the MultiBridgeSender at the source chain.\\r\\n     */\\r\\n    function updateReceiverAdapter(address[] calldata _receiverAdapters, uint32[] calldata _powers) external onlySelf {\\r\\n        require(_receiverAdapters.length == _powers.length, \\\"mismatch length\\\");\\r\\n        for (uint256 i = 0; i < _receiverAdapters.length; i++) {\\r\\n            _updateReceiverAdapter(_receiverAdapters[i], _powers[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Update power quorum threshold of message execution.\\r\\n     * This function can only be called by _executeMessage() invoked within receiveMessage() of this contract,\\r\\n     * which means the only party who can make these updates is the caller of the MultiBridgeSender at the source chain.\\r\\n     */\\r\\n    function updateQuorumThreshold(uint64 _quorumThreshold) external onlySelf {\\r\\n        require(_quorumThreshold <= THRESHOLD_DECIMAL, \\\"invalid threshold\\\");\\r\\n        quorumThreshold = _quorumThreshold;\\r\\n        emit QuorumThresholdUpdated(_quorumThreshold);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Compute message Id.\\r\\n     * message.bridgeName is not included in the message id.\\r\\n     */\\r\\n    function getMsgId(MessageStruct.Message calldata _message) public pure returns (bytes32) {\\r\\n        return\\r\\n            keccak256(\\r\\n                abi.encodePacked(\\r\\n                    _message.srcChainId,\\r\\n                    _message.dstChainId,\\r\\n                    _message.nonce,\\r\\n                    _message.target,\\r\\n                    _message.callData\\r\\n                )\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Execute the message (invoke external call according to the message content) if the message\\r\\n     * has reached the power threshold (the same message has been delivered by enough multiple bridges).\\r\\n     */\\r\\n    function _executeMessage(MessageStruct.Message calldata _message, MsgInfo storage _msgInfo) private {\\r\\n        if (_msgInfo.executed) {\\r\\n            return;\\r\\n        }\\r\\n        uint64 msgPower = _computeMessagePower(_msgInfo);\\r\\n        if (msgPower >= (totalPower * quorumThreshold) / THRESHOLD_DECIMAL) {\\r\\n            _msgInfo.executed = true;\\r\\n            (bool ok, ) = _message.target.call(_message.callData);\\r\\n            require(ok, \\\"external message execution failed\\\");\\r\\n            emit MessageExecuted(_message.srcChainId, _message.nonce, _message.target, _message.callData);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _computeMessagePower(MsgInfo storage _msgInfo) private view returns (uint64) {\\r\\n        uint64 msgPower;\\r\\n        for (uint32 i = 0; i < receiverAdapters.length; i++) {\\r\\n            address adapter = receiverAdapters[i];\\r\\n            if (_msgInfo.from[adapter]) {\\r\\n                msgPower += receiverAdapterPowers[adapter];\\r\\n            }\\r\\n        }\\r\\n        return msgPower;\\r\\n    }\\r\\n\\r\\n    function _updateReceiverAdapter(address _receiverAdapter, uint32 _power) private {\\r\\n        totalPower -= receiverAdapterPowers[_receiverAdapter];\\r\\n        totalPower += _power;\\r\\n        if (_power > 0) {\\r\\n            _setReceiverAdapter(_receiverAdapter, _power);\\r\\n        } else {\\r\\n            _removeReceiverAdapter(_receiverAdapter);\\r\\n        }\\r\\n        emit ReceiverAdapterUpdated(_receiverAdapter, _power);\\r\\n    }\\r\\n\\r\\n    function _setReceiverAdapter(address _receiverAdapter, uint32 _power) private {\\r\\n        require(_power > 0, \\\"zero power\\\");\\r\\n        if (receiverAdapterPowers[_receiverAdapter] == 0) {\\r\\n            receiverAdapters.push(_receiverAdapter);\\r\\n        }\\r\\n        receiverAdapterPowers[_receiverAdapter] = _power;\\r\\n    }\\r\\n\\r\\n    function _removeReceiverAdapter(address _receiverAdapter) private {\\r\\n        require(receiverAdapterPowers[_receiverAdapter] > 0, \\\"not a receiver adapter\\\");\\r\\n        uint256 lastIndex = receiverAdapters.length - 1;\\r\\n        for (uint256 i = 0; i < receiverAdapters.length; i++) {\\r\\n            if (receiverAdapters[i] == _receiverAdapter) {\\r\\n                if (i < lastIndex) {\\r\\n                    receiverAdapters[i] = receiverAdapters[lastIndex];\\r\\n                }\\r\\n                receiverAdapters.pop();\\r\\n                receiverAdapterPowers[_receiverAdapter] = 0;\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        revert(\\\"receiver adapter not found\\\"); // this should never happen\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa1970719ce708f95221fd125736a40afd71e71e222b56e2d3120ce4c103f1387\",\"license\":\"GPL-3.0-only\"},\"contracts/message/apps/multibridge/interfaces/IMultiBridgeReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"../MessageStruct.sol\\\";\\r\\n\\r\\ninterface IMultiBridgeReceiver {\\r\\n    /**\\r\\n     * @notice Receive messages from allowed bridge receiver adapters.\\r\\n     * If the accumulated power of a message has reached the power threshold,\\r\\n     * this message will be executed immediately, which will invoke an external function call\\r\\n     * according to the message content.\\r\\n     *\\r\\n     * @dev Every receiver adapter should call this function with decoded MessageStruct.Message\\r\\n     * when receiver adapter receives a message produced by a corresponding sender adapter on the source chain.\\r\\n     */\\r\\n    function receiveMessage(MessageStruct.Message calldata _message) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x7f734828a6b013c06df48d85a83fae5b66a86d94fb59fb68c3af98c14d49cf17\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61167e8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063db3ad22c11610066578063db3ad22c14610217578063e6c942bd1461022b578063f2fde38b14610241578063f979af911461025457600080fd5b80638da5cb5b146101c9578063a141985c146101da578063b3533bb6146101ed57600080fd5b8063745fc1d9116100c8578063745fc1d91461013c5780637565733b1461016f5780637b7a91dd1461018257806381c98712146101b657600080fd5b80630b3dfc67146100ef5780636e8b48191461011f578063715018a614610134575b600080fd5b6101026100fd366004611098565b610267565b6040516001600160a01b0390911681526020015b60405180910390f35b61013261012d3660046110ce565b610291565b005b61013261038d565b61015f61014a366004611098565b60046020526000908152604090205460ff1681565b6040519015158152602001610116565b61013261017d3660046110f0565b6103f3565b60005461019d90600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610116565b6101326101c4366004611233565b6105c7565b6000546001600160a01b0316610102565b6101326101e836600461134f565b610748565b61019d6101fb3660046113bb565b60026020526000908152604090205467ffffffffffffffff1681565b60035461019d9067ffffffffffffffff1681565b610233606481565b604051908152602001610116565b61013261024f3660046113bb565b61083d565b6102336102623660046110f0565b61091f565b6001818154811061027757600080fd5b6000918252602090912001546001600160a01b0316905081565b3330146102d05760405162461bcd60e51b81526020600482015260086024820152673737ba1039b2b63360c11b60448201526064015b60405180910390fd5b60648167ffffffffffffffff16111561032b5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207468726573686f6c6400000000000000000000000000000060448201526064016102c7565b6000805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff8416908102919091179091556040519081527fffaa40d0959707195162710fd2a6718daa825d2e6466211451588195f93a4dea9060200160405180910390a150565b6000546001600160a01b031633146103e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c7565b6103f1600061099d565b565b3360009081526002602052604090205467ffffffffffffffff166104655760405162461bcd60e51b815260206004820152602360248201527f6e6f7420616c6c6f7765642062726964676520726563656976657220616461706044820152623a32b960e91b60648201526084016102c7565b60006104708261091f565b600081815260046020908152604080832033845260018101909252909120549192509060ff16156105095760405162461bcd60e51b815260206004820152602960248201527f616c72656164792072656365697665642066726f6d207468697320627269646760448201527f652061646170746572000000000000000000000000000000000000000000000060648201526084016102c7565b33600090815260018281016020526040909120805460ff1916909117905561053460a08401846113d6565b60405161054292919061141d565b6040519081900390207fb2bf26f85571aa21ecc7a9d9a803cafca6a0a0b240196e5067f02c791f23935761057960208601866110ce565b610589606087016040880161142d565b6040805167ffffffffffffffff909316835263ffffffff9091166020830152339082015260600160405180910390a26105c283826109fa565b505050565b6000546001600160a01b031633146106215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c7565b81518351146106645760405162461bcd60e51b815260206004820152600f60248201526e0dad2e6dac2e8c6d040d8cadccee8d608b1b60448201526064016102c7565b60648167ffffffffffffffff1611156106bf5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207468726573686f6c6400000000000000000000000000000060448201526064016102c7565b60005b8351811015610719576107078482815181106106e0576106e0611448565b60200260200101518483815181106106fa576106fa611448565b6020026020010151610bb9565b8061071181611474565b9150506106c2565b506000805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff8416021790556105c261038d565b3330146107825760405162461bcd60e51b81526020600482015260086024820152673737ba1039b2b63360c11b60448201526064016102c7565b8281146107c35760405162461bcd60e51b815260206004820152600f60248201526e0dad2e6dac2e8c6d040d8cadccee8d608b1b60448201526064016102c7565b60005b83811015610836576108248585838181106107e3576107e3611448565b90506020020160208101906107f891906113bb565b84848481811061080a5761080a611448565b905060200201602081019061081f919061142d565b610bb9565b8061082e81611474565b9150506107c6565b5050505050565b6000546001600160a01b031633146108975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c7565b6001600160a01b0381166109135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102c7565b61091c8161099d565b50565b600061092e60208301836110ce565b61093e60408401602085016110ce565b61094e606085016040860161142d565b61095e60808601606087016113bb565b61096b60808701876113d6565b6040516020016109809695949392919061148d565b604051602081830303815290604052805190602001209050919050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805460ff1615610a08575050565b6000610a1382610cda565b600054600354919250606491610a3d9167ffffffffffffffff600160a01b90910481169116611509565b67ffffffffffffffff16610a519190611535565b8167ffffffffffffffff16106105c257815460ff191660011782556000610a7e60808501606086016113bb565b6001600160a01b0316610a9460808601866113d6565b604051610aa292919061141d565b6000604051808303816000865af19150503d8060008114610adf576040519150601f19603f3d011682016040523d82523d6000602084013e610ae4565b606091505b5050905080610b3f5760405162461bcd60e51b815260206004820152602160248201527f65787465726e616c206d65737361676520657865637574696f6e206661696c656044820152601960fa1b60648201526084016102c7565b7feab6c3741e5430408e87ae8ea18de98bc8652e4e8f9247607a23f9af5576f183610b6d60208601866110ce565b610b7d606087016040880161142d565b610b8d60808801606089016113bb565b610b9a60808901896113d6565b604051610bab959493929190611557565b60405180910390a150505050565b6001600160a01b0382166000908152600260205260408120546003805467ffffffffffffffff928316939192610bf1918591166115b4565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508063ffffffff16600360008282829054906101000a900467ffffffffffffffff16610c4291906115d5565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060008163ffffffff161115610c8657610c818282610d87565b610c8f565b610c8f82610e94565b604080516001600160a01b038416815263ffffffff831660208201527f02c4c6a3b681444b2d489a30c504c045dbc797a1dd218d018887ce8054576d75910160405180910390a15050565b60008060005b60015463ffffffff82161015610d8057600060018263ffffffff1681548110610d0b57610d0b611448565b60009182526020808320909101546001600160a01b03168083526001880190915260409091205490915060ff1615610d6d576001600160a01b038116600090815260026020526040902054610d6a9067ffffffffffffffff16846115d5565b92505b5080610d78816115f6565b915050610ce0565b5092915050565b60008163ffffffff1611610ddd5760405162461bcd60e51b815260206004820152600a60248201527f7a65726f20706f7765720000000000000000000000000000000000000000000060448201526064016102c7565b6001600160a01b03821660009081526002602052604081205467ffffffffffffffff169003610e5e576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790555b6001600160a01b039091166000908152600260205260409020805467ffffffffffffffff191663ffffffff909216919091179055565b6001600160a01b03811660009081526002602052604090205467ffffffffffffffff16610f035760405162461bcd60e51b815260206004820152601660248201527f6e6f74206120726563656976657220616461707465720000000000000000000060448201526064016102c7565b60018054600091610f1391611619565b905060005b60015481101561104f57826001600160a01b031660018281548110610f3f57610f3f611448565b6000918252602090912001546001600160a01b03160361103d5781811015610fcf5760018281548110610f7457610f74611448565b600091825260209091200154600180546001600160a01b039092169183908110610fa057610fa0611448565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6001805480610fe057610fe0611632565b600082815260208082208301600019908101805473ffffffffffffffffffffffffffffffffffffffff191690559092019092556001600160a01b039490941681526002909352505060409020805467ffffffffffffffff19169055565b8061104781611474565b915050610f18565b5060405162461bcd60e51b815260206004820152601a60248201527f72656365697665722061646170746572206e6f7420666f756e6400000000000060448201526064016102c7565b6000602082840312156110aa57600080fd5b5035919050565b803567ffffffffffffffff811681146110c957600080fd5b919050565b6000602082840312156110e057600080fd5b6110e9826110b1565b9392505050565b60006020828403121561110257600080fd5b813567ffffffffffffffff81111561111957600080fd5b820160c081850312156110e957600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561116a5761116a61112b565b604052919050565b600067ffffffffffffffff82111561118c5761118c61112b565b5060051b60200190565b80356001600160a01b03811681146110c957600080fd5b803563ffffffff811681146110c957600080fd5b600082601f8301126111d257600080fd5b813560206111e76111e283611172565b611141565b82815260059290921b8401810191818101908684111561120657600080fd5b8286015b848110156112285761121b816111ad565b835291830191830161120a565b509695505050505050565b60008060006060848603121561124857600080fd5b833567ffffffffffffffff8082111561126057600080fd5b818601915086601f83011261127457600080fd5b813560206112846111e283611172565b82815260059290921b8401810191818101908a8411156112a357600080fd5b948201945b838610156112c8576112b986611196565b825294820194908201906112a8565b975050870135925050808211156112de57600080fd5b506112eb868287016111c1565b9250506112fa604085016110b1565b90509250925092565b60008083601f84011261131557600080fd5b50813567ffffffffffffffff81111561132d57600080fd5b6020830191508360208260051b850101111561134857600080fd5b9250929050565b6000806000806040858703121561136557600080fd5b843567ffffffffffffffff8082111561137d57600080fd5b61138988838901611303565b909650945060208701359150808211156113a257600080fd5b506113af87828801611303565b95989497509550505050565b6000602082840312156113cd57600080fd5b6110e982611196565b6000808335601e198436030181126113ed57600080fd5b83018035915067ffffffffffffffff82111561140857600080fd5b60200191503681900382131561134857600080fd5b8183823760009101908152919050565b60006020828403121561143f57600080fd5b6110e9826111ad565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114865761148661145e565b5060010190565b60007fffffffffffffffff000000000000000000000000000000000000000000000000808960c01b168352808860c01b1660088401525063ffffffff60e01b8660e01b1660108301526bffffffffffffffffffffffff198560601b16601483015282846028840137506000910160280190815295945050505050565b67ffffffffffffffff81811683821602808216919082811461152d5761152d61145e565b505092915050565b60008261155257634e487b7160e01b600052601260045260246000fd5b500490565b67ffffffffffffffff8616815263ffffffff851660208201526001600160a01b038416604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b67ffffffffffffffff828116828216039080821115610d8057610d8061145e565b67ffffffffffffffff818116838216019080821115610d8057610d8061145e565b600063ffffffff80831681810361160f5761160f61145e565b6001019392505050565b8181038181111561162c5761162c61145e565b92915050565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203ad2beb1b896b18b527ca000c702e2bf59d54f1262a9802b7201bd6d18efa86164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063db3ad22c11610066578063db3ad22c14610217578063e6c942bd1461022b578063f2fde38b14610241578063f979af911461025457600080fd5b80638da5cb5b146101c9578063a141985c146101da578063b3533bb6146101ed57600080fd5b8063745fc1d9116100c8578063745fc1d91461013c5780637565733b1461016f5780637b7a91dd1461018257806381c98712146101b657600080fd5b80630b3dfc67146100ef5780636e8b48191461011f578063715018a614610134575b600080fd5b6101026100fd366004611098565b610267565b6040516001600160a01b0390911681526020015b60405180910390f35b61013261012d3660046110ce565b610291565b005b61013261038d565b61015f61014a366004611098565b60046020526000908152604090205460ff1681565b6040519015158152602001610116565b61013261017d3660046110f0565b6103f3565b60005461019d90600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610116565b6101326101c4366004611233565b6105c7565b6000546001600160a01b0316610102565b6101326101e836600461134f565b610748565b61019d6101fb3660046113bb565b60026020526000908152604090205467ffffffffffffffff1681565b60035461019d9067ffffffffffffffff1681565b610233606481565b604051908152602001610116565b61013261024f3660046113bb565b61083d565b6102336102623660046110f0565b61091f565b6001818154811061027757600080fd5b6000918252602090912001546001600160a01b0316905081565b3330146102d05760405162461bcd60e51b81526020600482015260086024820152673737ba1039b2b63360c11b60448201526064015b60405180910390fd5b60648167ffffffffffffffff16111561032b5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207468726573686f6c6400000000000000000000000000000060448201526064016102c7565b6000805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff8416908102919091179091556040519081527fffaa40d0959707195162710fd2a6718daa825d2e6466211451588195f93a4dea9060200160405180910390a150565b6000546001600160a01b031633146103e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c7565b6103f1600061099d565b565b3360009081526002602052604090205467ffffffffffffffff166104655760405162461bcd60e51b815260206004820152602360248201527f6e6f7420616c6c6f7765642062726964676520726563656976657220616461706044820152623a32b960e91b60648201526084016102c7565b60006104708261091f565b600081815260046020908152604080832033845260018101909252909120549192509060ff16156105095760405162461bcd60e51b815260206004820152602960248201527f616c72656164792072656365697665642066726f6d207468697320627269646760448201527f652061646170746572000000000000000000000000000000000000000000000060648201526084016102c7565b33600090815260018281016020526040909120805460ff1916909117905561053460a08401846113d6565b60405161054292919061141d565b6040519081900390207fb2bf26f85571aa21ecc7a9d9a803cafca6a0a0b240196e5067f02c791f23935761057960208601866110ce565b610589606087016040880161142d565b6040805167ffffffffffffffff909316835263ffffffff9091166020830152339082015260600160405180910390a26105c283826109fa565b505050565b6000546001600160a01b031633146106215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c7565b81518351146106645760405162461bcd60e51b815260206004820152600f60248201526e0dad2e6dac2e8c6d040d8cadccee8d608b1b60448201526064016102c7565b60648167ffffffffffffffff1611156106bf5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207468726573686f6c6400000000000000000000000000000060448201526064016102c7565b60005b8351811015610719576107078482815181106106e0576106e0611448565b60200260200101518483815181106106fa576106fa611448565b6020026020010151610bb9565b8061071181611474565b9150506106c2565b506000805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff8416021790556105c261038d565b3330146107825760405162461bcd60e51b81526020600482015260086024820152673737ba1039b2b63360c11b60448201526064016102c7565b8281146107c35760405162461bcd60e51b815260206004820152600f60248201526e0dad2e6dac2e8c6d040d8cadccee8d608b1b60448201526064016102c7565b60005b83811015610836576108248585838181106107e3576107e3611448565b90506020020160208101906107f891906113bb565b84848481811061080a5761080a611448565b905060200201602081019061081f919061142d565b610bb9565b8061082e81611474565b9150506107c6565b5050505050565b6000546001600160a01b031633146108975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c7565b6001600160a01b0381166109135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102c7565b61091c8161099d565b50565b600061092e60208301836110ce565b61093e60408401602085016110ce565b61094e606085016040860161142d565b61095e60808601606087016113bb565b61096b60808701876113d6565b6040516020016109809695949392919061148d565b604051602081830303815290604052805190602001209050919050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805460ff1615610a08575050565b6000610a1382610cda565b600054600354919250606491610a3d9167ffffffffffffffff600160a01b90910481169116611509565b67ffffffffffffffff16610a519190611535565b8167ffffffffffffffff16106105c257815460ff191660011782556000610a7e60808501606086016113bb565b6001600160a01b0316610a9460808601866113d6565b604051610aa292919061141d565b6000604051808303816000865af19150503d8060008114610adf576040519150601f19603f3d011682016040523d82523d6000602084013e610ae4565b606091505b5050905080610b3f5760405162461bcd60e51b815260206004820152602160248201527f65787465726e616c206d65737361676520657865637574696f6e206661696c656044820152601960fa1b60648201526084016102c7565b7feab6c3741e5430408e87ae8ea18de98bc8652e4e8f9247607a23f9af5576f183610b6d60208601866110ce565b610b7d606087016040880161142d565b610b8d60808801606089016113bb565b610b9a60808901896113d6565b604051610bab959493929190611557565b60405180910390a150505050565b6001600160a01b0382166000908152600260205260408120546003805467ffffffffffffffff928316939192610bf1918591166115b4565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508063ffffffff16600360008282829054906101000a900467ffffffffffffffff16610c4291906115d5565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060008163ffffffff161115610c8657610c818282610d87565b610c8f565b610c8f82610e94565b604080516001600160a01b038416815263ffffffff831660208201527f02c4c6a3b681444b2d489a30c504c045dbc797a1dd218d018887ce8054576d75910160405180910390a15050565b60008060005b60015463ffffffff82161015610d8057600060018263ffffffff1681548110610d0b57610d0b611448565b60009182526020808320909101546001600160a01b03168083526001880190915260409091205490915060ff1615610d6d576001600160a01b038116600090815260026020526040902054610d6a9067ffffffffffffffff16846115d5565b92505b5080610d78816115f6565b915050610ce0565b5092915050565b60008163ffffffff1611610ddd5760405162461bcd60e51b815260206004820152600a60248201527f7a65726f20706f7765720000000000000000000000000000000000000000000060448201526064016102c7565b6001600160a01b03821660009081526002602052604081205467ffffffffffffffff169003610e5e576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790555b6001600160a01b039091166000908152600260205260409020805467ffffffffffffffff191663ffffffff909216919091179055565b6001600160a01b03811660009081526002602052604090205467ffffffffffffffff16610f035760405162461bcd60e51b815260206004820152601660248201527f6e6f74206120726563656976657220616461707465720000000000000000000060448201526064016102c7565b60018054600091610f1391611619565b905060005b60015481101561104f57826001600160a01b031660018281548110610f3f57610f3f611448565b6000918252602090912001546001600160a01b03160361103d5781811015610fcf5760018281548110610f7457610f74611448565b600091825260209091200154600180546001600160a01b039092169183908110610fa057610fa0611448565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6001805480610fe057610fe0611632565b600082815260208082208301600019908101805473ffffffffffffffffffffffffffffffffffffffff191690559092019092556001600160a01b039490941681526002909352505060409020805467ffffffffffffffff19169055565b8061104781611474565b915050610f18565b5060405162461bcd60e51b815260206004820152601a60248201527f72656365697665722061646170746572206e6f7420666f756e6400000000000060448201526064016102c7565b6000602082840312156110aa57600080fd5b5035919050565b803567ffffffffffffffff811681146110c957600080fd5b919050565b6000602082840312156110e057600080fd5b6110e9826110b1565b9392505050565b60006020828403121561110257600080fd5b813567ffffffffffffffff81111561111957600080fd5b820160c081850312156110e957600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561116a5761116a61112b565b604052919050565b600067ffffffffffffffff82111561118c5761118c61112b565b5060051b60200190565b80356001600160a01b03811681146110c957600080fd5b803563ffffffff811681146110c957600080fd5b600082601f8301126111d257600080fd5b813560206111e76111e283611172565b611141565b82815260059290921b8401810191818101908684111561120657600080fd5b8286015b848110156112285761121b816111ad565b835291830191830161120a565b509695505050505050565b60008060006060848603121561124857600080fd5b833567ffffffffffffffff8082111561126057600080fd5b818601915086601f83011261127457600080fd5b813560206112846111e283611172565b82815260059290921b8401810191818101908a8411156112a357600080fd5b948201945b838610156112c8576112b986611196565b825294820194908201906112a8565b975050870135925050808211156112de57600080fd5b506112eb868287016111c1565b9250506112fa604085016110b1565b90509250925092565b60008083601f84011261131557600080fd5b50813567ffffffffffffffff81111561132d57600080fd5b6020830191508360208260051b850101111561134857600080fd5b9250929050565b6000806000806040858703121561136557600080fd5b843567ffffffffffffffff8082111561137d57600080fd5b61138988838901611303565b909650945060208701359150808211156113a257600080fd5b506113af87828801611303565b95989497509550505050565b6000602082840312156113cd57600080fd5b6110e982611196565b6000808335601e198436030181126113ed57600080fd5b83018035915067ffffffffffffffff82111561140857600080fd5b60200191503681900382131561134857600080fd5b8183823760009101908152919050565b60006020828403121561143f57600080fd5b6110e9826111ad565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114865761148661145e565b5060010190565b60007fffffffffffffffff000000000000000000000000000000000000000000000000808960c01b168352808860c01b1660088401525063ffffffff60e01b8660e01b1660108301526bffffffffffffffffffffffff198560601b16601483015282846028840137506000910160280190815295945050505050565b67ffffffffffffffff81811683821602808216919082811461152d5761152d61145e565b505092915050565b60008261155257634e487b7160e01b600052601260045260246000fd5b500490565b67ffffffffffffffff8616815263ffffffff851660208201526001600160a01b038416604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b67ffffffffffffffff828116828216039080821115610d8057610d8061145e565b67ffffffffffffffff818116838216019080821115610d8057610d8061145e565b600063ffffffff80831681810361160f5761160f61145e565b6001019392505050565b8181038181111561162c5761162c61145e565b92915050565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203ad2beb1b896b18b527ca000c702e2bf59d54f1262a9802b7201bd6d18efa86164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getMsgId((uint64,uint64,uint32,address,bytes,string))": {
        "notice": "Compute message Id. message.bridgeName is not included in the message id."
      },
      "initialize(address[],uint32[],uint64)": {
        "notice": "A one-time function to initialize contract states by the owner. The contract ownership will be renounced at the end of this call."
      },
      "receiveMessage((uint64,uint64,uint32,address,bytes,string))": {
        "notice": "Receive messages from allowed bridge receiver adapters. If the accumulated power of a message has reached the power threshold, this message will be executed immediately, which will invoke an external function call according to the message content."
      },
      "updateQuorumThreshold(uint64)": {
        "notice": "Update power quorum threshold of message execution. This function can only be called by _executeMessage() invoked within receiveMessage() of this contract, which means the only party who can make these updates is the caller of the MultiBridgeSender at the source chain."
      },
      "updateReceiverAdapter(address[],uint32[])": {
        "notice": "Update bridge receiver adapters. This function can only be called by _executeMessage() invoked within receiveMessage() of this contract, which means the only party who can make these updates is the caller of the MultiBridgeSender at the source chain."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 539,
        "contract": "contracts/message/apps/multibridge/MultiBridgeReceiver.sol:MultiBridgeReceiver",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 18990,
        "contract": "contracts/message/apps/multibridge/MultiBridgeReceiver.sol:MultiBridgeReceiver",
        "label": "quorumThreshold",
        "offset": 20,
        "slot": "0",
        "type": "t_uint64"
      },
      {
        "astId": 18993,
        "contract": "contracts/message/apps/multibridge/MultiBridgeReceiver.sol:MultiBridgeReceiver",
        "label": "receiverAdapters",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 18997,
        "contract": "contracts/message/apps/multibridge/MultiBridgeReceiver.sol:MultiBridgeReceiver",
        "label": "receiverAdapterPowers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint64)"
      },
      {
        "astId": 18999,
        "contract": "contracts/message/apps/multibridge/MultiBridgeReceiver.sol:MultiBridgeReceiver",
        "label": "totalPower",
        "offset": 0,
        "slot": "3",
        "type": "t_uint64"
      },
      {
        "astId": 19011,
        "contract": "contracts/message/apps/multibridge/MultiBridgeReceiver.sol:MultiBridgeReceiver",
        "label": "msgInfos",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_struct(MsgInfo)19006_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint64)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint64)",
        "numberOfBytes": "32",
        "value": "t_uint64"
      },
      "t_mapping(t_bytes32,t_struct(MsgInfo)19006_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct MultiBridgeReceiver.MsgInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(MsgInfo)19006_storage"
      },
      "t_struct(MsgInfo)19006_storage": {
        "encoding": "inplace",
        "label": "struct MultiBridgeReceiver.MsgInfo",
        "members": [
          {
            "astId": 19001,
            "contract": "contracts/message/apps/multibridge/MultiBridgeReceiver.sol:MultiBridgeReceiver",
            "label": "executed",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 19005,
            "contract": "contracts/message/apps/multibridge/MultiBridgeReceiver.sol:MultiBridgeReceiver",
            "label": "from",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}